[{"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js":"1","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js":"2","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js":"3","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js":"4","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js":"5","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js":"6","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js":"7","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js":"8","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js":"9","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js":"10","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js":"11","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js":"12","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js":"13","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js":"14","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js":"15","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js":"16","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js":"17","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js":"18","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js":"19","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js":"20","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js":"21","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js":"22","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js":"23","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js":"24","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js":"25","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js":"26","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyReducer.js":"27","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js":"28","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js":"29","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js":"30","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js":"31","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js":"32","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemContainer.js":"33","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemActions.js":"34","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-message-reducer.js":"35","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-error-reducer.js":"36","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItem.js":"37","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemContainer.js":"38","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemActions.js":"39"},{"size":382,"mtime":1608593124073,"results":"40","hashOfConfig":"41"},{"size":571,"mtime":1609235894533,"results":"42","hashOfConfig":"41"},{"size":448,"mtime":1608284288025,"results":"43","hashOfConfig":"41"},{"size":563,"mtime":1609284884344,"results":"44","hashOfConfig":"41"},{"size":3882,"mtime":1609210231059,"results":"45","hashOfConfig":"41"},{"size":8156,"mtime":1608273763165,"results":"46","hashOfConfig":"41"},{"size":576,"mtime":1609285756820,"results":"47","hashOfConfig":"41"},{"size":391,"mtime":1608284089102,"results":"48","hashOfConfig":"41"},{"size":114,"mtime":1608608595297,"results":"49","hashOfConfig":"41"},{"size":1649,"mtime":1608860924711,"results":"50","hashOfConfig":"41"},{"size":405,"mtime":1608852029507,"results":"51","hashOfConfig":"41"},{"size":300,"mtime":1609211031704,"results":"52","hashOfConfig":"41"},{"size":3579,"mtime":1609327008217,"results":"53","hashOfConfig":"41"},{"size":1603,"mtime":1608691023491,"results":"54","hashOfConfig":"41"},{"size":1160,"mtime":1608609940359,"results":"55","hashOfConfig":"41"},{"size":422,"mtime":1608636383126,"results":"56","hashOfConfig":"41"},{"size":257,"mtime":1608420859798,"results":"57","hashOfConfig":"41"},{"size":532,"mtime":1608690938433,"results":"58","hashOfConfig":"41"},{"size":245,"mtime":1608635735341,"results":"59","hashOfConfig":"41"},{"size":794,"mtime":1608690923809,"results":"60","hashOfConfig":"41"},{"size":232,"mtime":1608442202017,"results":"61","hashOfConfig":"41"},{"size":322,"mtime":1608592661900,"results":"62","hashOfConfig":"41"},{"size":522,"mtime":1608679373441,"results":"63","hashOfConfig":"41"},{"size":284,"mtime":1608636198762,"results":"64","hashOfConfig":"41"},{"size":0,"mtime":1608636264966,"results":"65","hashOfConfig":"41"},{"size":409,"mtime":1608636266901,"results":"66","hashOfConfig":"41"},{"size":425,"mtime":1608636583053,"results":"67","hashOfConfig":"41"},{"size":3192,"mtime":1609306218756,"results":"68","hashOfConfig":"41"},{"size":178,"mtime":1608851859442,"results":"69","hashOfConfig":"41"},{"size":302,"mtime":1608883499567,"results":"70","hashOfConfig":"41"},{"size":2818,"mtime":1609327389906,"results":"71","hashOfConfig":"41"},{"size":2523,"mtime":1609151048691,"results":"72","hashOfConfig":"41"},{"size":567,"mtime":1609045381367,"results":"73","hashOfConfig":"41"},{"size":479,"mtime":1609044582528,"results":"74","hashOfConfig":"41"},{"size":378,"mtime":1609284856163,"results":"75","hashOfConfig":"41"},{"size":406,"mtime":1609233519131,"results":"76","hashOfConfig":"41"},{"size":1680,"mtime":1609279845123,"results":"77","hashOfConfig":"41"},{"size":657,"mtime":1609234536563,"results":"78","hashOfConfig":"41"},{"size":759,"mtime":1609285567798,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"7n2hzo",{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js",[],["170","171"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js",["172"],"import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\nimport createSocketMiddleware from './utils/socket-middleware';\n\nconst middleware = [thunk, createSocketMiddleware()];\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Configuration If NPM Package Isn't needed.\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js",["173","174","175"],"import React from 'react';\nimport './Login.scss';\nimport { Modal } from 'reactstrap';\n\n// Child Components:\nimport NewAccount from '../NewAccount/NewAccount';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from 'react-router';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Login\n      userName: \"\",\n      password: \"\",\n\n      // Modal\n      modal: false,\n      redirect: false\n    };\n    // SetOnChange (State Managing Callback)\n    this.setOnChange = this.setOnChange.bind(this);\n    // Login Request Handler\n    this.handleLogin = this.handleLogin.bind(this);\n    // Modal Trigger\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  /*\n  Future Refactors: handleLogin(event) should be done through TCP socket conenction\n  as opposed to a HTTP Post handler to reduce incoming server traffic.\n  */\n  handleLogin(event) {\n    // 1. Verify the account username exists (/w the corresponding password).\n    event.preventDefault();\n    fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.userName,\n        password: this.state.password\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(this);\n        console.log(data);\n        // If Unsuccesfful:\n        // Trigger Alert/Feedback\n        if ('code' in data) {\n          // Control FeedBack.\n        }\n        // If Succesful:\n        // Save account details to redux state.\n        // Redirect to Messaging Page.\n        else {\n          // Should be a single account stored onto Redux Store.\n          this.props.storeAccountDetails(data['account'][0]);\n          console.log(data['accessToken']);\n          // Redirect Page To Other Main Page Component.\n          this.setState({ redirect: true })\n        }\n      })\n  }\n\n  // Create Account Handlers\n  setOnChange(event) {\n    console.log(event.target.id);\n    let fieldID = event.target.id;\n    let obj = {};\n    obj[`${fieldID}`] = event.target.value;\n    this.setState(obj);\n    this.setState({\n      emailinvalid: false,\n      usrinvalid: false,\n      pwinvalid: false\n    })\n  }\n\n  // Handles Modal Triggering\n  toggleModal() {\n    console.log(!this.state.modal);\n    this.setState({ modal: !this.state.modal })\n  }\n\n  render() {\n    return (\n      <>\n        {/* Redirect Initiative */}\n        {this.state.redirect == true\n          ?\n          <Redirect to=\"/main\" />\n          :\n          null\n        }\n        <div className=\"wrapper fadeInDown\" onSubmit={this.handleLogin}>\n          <div id=\"formContent\">\n            <div className=\"wrapper-img fadeIn first\">\n              <img src=\"https://img.icons8.com/cute-clipart/256/000000/chat.png\" id=\"icon\" />\n            </div>\n\n            <form>\n              <input type=\"text\" id=\"userName\" className=\"fadeIn second\" name=\"userName\" placeholder=\"Username\" onChange={this.setOnChange} />\n              <input type=\"password\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"Password\" onChange={this.setOnChange} />\n              <input type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\" />\n            </form>\n\n            <div id=\"formFooter\">\n              <a className=\"underlineHover\" href=\"#\">Forgot Password?</a>\n            </div>\n            <div id=\"formFooter\">\n              <button className=\"createAccount fadeIn fifth\" onClick={this.toggleModal}>Create Account</button>\n              {/* newAccount Modal */}\n              <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n                <NewAccount />\n              </Modal>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Login;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js",["176","177","178"],"import React from 'react';\nimport { ModalHeader, ModalBody, ModalFooter, Label, Input, Form, FormGroup, FormFeedback } from 'reactstrap';\n\nclass NewAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // New Account\n      nafname: \"\",\n      nalname: \"\",\n      nausername: \"\",\n      naemailaddr: \"\",\n      napassword1: \"\",\n      napassword2: \"\",\n      nadobday: 1,\n      nadobmonth: 1,\n      nadobyear: (new Date()).getFullYear(),\n      nagender: \"N\",\n      usrinvalid: false,\n      emailinvalid: false,\n      pwinvalid: false,\n    }\n    // SetOnChange (State Managing Callback)\n    this.setOnChange = this.setOnChange.bind(this);\n    // Create Account Request Handler\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    // Modal Trigger\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  // Create Account Handlers\n  setOnChange(event) {\n    let fieldID = event.target.id;\n    let obj = {};\n    obj[`${fieldID}`] = event.target.value;\n    this.setState(obj);\n    this.setState({\n      emailinvalid: false,\n      usrinvalid: false,\n      pwinvalid: false\n    })\n  }\n\n  // Feedbback Togglers\n  invalidateEmailFeedback() {\n    console.log(!this.state.emailinvalid);\n    this.setState({ emailinvalid: true })\n  }\n  invalidateUserFeedback() {\n    console.log(!this.state.usrinvalid);\n    this.setState({ usrinvalid: true })\n  }\n  invalidatePasswordFeedback() {\n    console.log(!this.state.pwinvalid);\n    this.setState({ pwinvalid: true })\n  }\n\n  handleNewAccount(event) {\n    // Check #1: Check if passwords match:\n    // Check #2 Check if username is being used already:\n    // Check #3 Check if email is being used already:\n    fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/newaccount`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        nafname: this.state.nafname,\n        nalname: this.state.nalname,\n        nausername: this.state.nausername,\n        naemailaddr: this.state.naemailaddr,\n        napassword1: this.state.napassword1,\n        napassword2: this.state.napassword2,\n        nadobday: this.state.nadobday,\n        nadobmonth: this.state.nadobmonth,\n        nadobyear: this.state.nadobyear,\n        nagender: this.state.nagender\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        // If 'data' is an array, then it has errors\n        if (Array.isArray(data)) {\n          // Handles error messages\n          data.map((item, idx) => {\n            if ('code' in item) {\n              switch (item.code) {\n                case \"EMAIL_REGISTERED\":\n                  this.invalidateEmailFeedback();\n                  break;\n                case \"USERNAME_REGISTERED\":\n                  this.invalidateUserFeedback();\n                  break;\n                case \"PASSWORD_MISMATCH\":\n                  this.invalidatePasswordFeedback();\n                  break;\n              }\n            }\n          })\n          // If 'data' is an object, then it has no errors\n        } else {\n          // Close Modal (Probably Trigger an alert or something asw to tell the user they signed up!)\n          this.toggleModal();\n        }\n      })\n  }\n  \n  // Handles Modal Triggering\n  toggleModal() {\n    console.log(!this.state.modal);\n    this.setState({ modal: !this.state.modal })\n  }\n\n\n  render() {\n    let days = [];\n    let months = [];\n    let years = [];\n    for (let i = 1; i <= 31; i++) { days.push(i); }\n    for (let i = 1; i <= 12; i++) { months.push(i); }\n    for (let i = 1900; i <= (new Date()).getFullYear(); i++) { years.push(i); }\n    return (\n      <>\n        <ModalHeader toggle={this.toggleModal}><h3>Sign Up</h3></ModalHeader>\n        <ModalBody>\n\n          <Form className=\"createAccount-form container\">\n            <FormGroup className=\"createAccount-form-name\">\n              {/* Name Fields */}\n              <Input type=\"text\" id=\"nafname\" name=\"nafname\" placeholder=\"First Name\" onChange={this.setOnChange} />\n              <Input type=\"text\" id=\"nalname\" name=\"nalname\" placeholder=\"Last Name\" onChange={this.setOnChange} />\n            </FormGroup>\n            {/* Email Field */}\n            <FormGroup className=\"createAccount-form-email\">\n              {\n                this.state.emailinvalid\n                  ?\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} invalid />\n                  :\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Emails is taken</FormFeedback>\n            </FormGroup>\n            {/* Username Field */}\n            <FormGroup className=\"createAccount-form-username\">\n              {\n                this.state.usrinvalid ?\n                  <Input invalid type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n                  :\n                  <Input type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Username is taken</FormFeedback>\n            </FormGroup>\n            {/* Password Fields */}\n            <FormGroup className=\"createAccount-form-password\">\n              {this.state.pwinvalid ?\n                <>\n                  <Input invalid type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input invalid type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n                :\n                <>\n                  <Input type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n              }\n              <FormFeedback invalid>You will not be able to see this</FormFeedback>\n            </FormGroup>\n            <FormGroup className=\"createAccount-form-dob\">\n              <div className=\"createAccount-form-dob-label\">\n                <h6>Date Of Birth:</h6>\n              </div>\n              {/* Date Of Birth Selectors: */}\n              <select onChange={this.setOnChange} name=\"nadobday\" id=\"nadobday\" className=\"dob-day\" value={this.state.nadobday}>\n                {days.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobmonth\" id=\"nadobmonth\" className=\"dob-month\" value={this.state.nadobmonth}>\n                {months.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobyear\" id=\"nadobyear\" className=\"dob-year\" value={this.state.nadobyear}>\n                {years.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n            </FormGroup>\n            {/* Gender Selector: */}\n            <FormGroup>\n              <div className=\"createAccount-form-gender-label\">\n                <h6>Gender:</h6>\n              </div>\n              <select onChange={this.setOnChange} name=\"nagender\" id=\"nagender\" className=\"createAccount-form-gender\">\n                <option value=\"N\">---Choose A Gender Option---</option>\n                <option value=\"M\">Male</option>\n                <option value=\"F\">Female</option>\n              </select>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"signUp\" onClick={this.handleNewAccount}>Create Account</button>\n          {/* Adds Space: {' '} */}\n        </ModalFooter>\n      </>\n    )\n  }\n}\n\nexport default NewAccount;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js",["179"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js",["180"],"import React, { useState } from 'react';\n\nimport './ChatItem.scss';\n\n\nclass ChatItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatName: props.userId,\n      chatMsg: props.userMsg,\n      isSelected: props.isSelected\n    }\n  }\n  // Initial State: Most Recent Message On The Database Via an HTTP request.\n  // Consequent Rerenders: New Dynamic Messages sent to this specific chat \n  // (Requires socket endpoints to emit the corresponding data from the client)\n  // const [chatName, setChatName] = useState(props.userId);\n  // const [chatMsg, setChatMsg] = useState(props.userMsg);\n  // const [isSelected, setSelectedState] = useState(props.isSelected);\n  // console.log(props);\n  render() {\n    return (\n    this.state.isSelected\n        ?\n        // Selected Render\n        <div className=\"chatitem selected\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n        :\n        // Not Selected Render\n        <div className=\"chatitem\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n    )\n  }\n}\nexport default ChatItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js",["181","182","183"],"import React, {useState} from 'react';\n\nimport './ChatHeader.scss';\n\nfunction ChatHeader({chatName, chatType}) {\n\n  return (\n    <>\n      <div className=\"chat-header\">\n          <h5>{chatName}</h5>\n          {\n          chatType == 'F' \n          ?\n          <button>Friends <i className=\"fas fa-check\"></i></button>\n          :\n          (chatType == 'G' \n          ?\n          <button>In Group <i className=\"fas fa-check\"></i></button>\n          :\n          null)\n          }\n      </div>\n    </>\n  )\n}\n\nexport default ChatHeader;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js",["184"],"import React from 'react';\n\nimport './ChatBody.scss';\n\n// Containers:\nimport Message from '../Message/MessageContainer';\n\nclass ChatBody extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"chatbody\">\n      <div className=\"chatbody-messages\">\n        <Message msgString=\"Yes\" isSender={false} />\n        <Message msgString=\"Yes\" isSender={true} />\n      </div>\n      <div className=\"chatbody-form\">\n        <hr />\n        <div className=\"chatbody-form-textbox\">\n          <input type=\"text\" placeholder=\"Say something...\" />\n          <button>\n          <i className=\"fas fa-caret-right fa-3x\"></i>\n          </button>\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default ChatBody;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js",["185"],"import React, {useState} from 'react';\n\nimport './Message.scss';\n\nfunction Message({msgString, isSender}) {\n\n  return(\n    isSender\n    ?\n    <div className=\"message sender\">\n      <p>{msgString}</p>\n    </div>\n    :\n    <div className=\"message reciever\">\n      <p>{msgString}</p>\n    </div>\n  )\n}\n\nexport default Message;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js",[],["186","187"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js",["188"],"import io from 'socket.io-client';\n\n// Invoke this function to return the corresponding socket-middleware.\nconst createSocketMiddleware = () => {\n    let socket;\n    // Socket Middleware\n    // storeAPI has 'getState' and 'dispatch' as it's fields here.\n    // (Could also use ({dispatch, getState}) in place of 'storeAPI' here)\n    return storeAPI => next => action => {\n        switch (action.type) {\n            // Must dispatch 'LOGIN' action to instantiate socket endpoint.\n            case \"LOGIN\": {\n                // Connect with server.\n                socket = io();\n                /*\n                START: Server => Client Endpoints:\n                */\n                socket.on(\"NEW_FRIEND_REQUEST\", (message) => {\n                    // Modify acc_data the way the server intends:\n                    let state = storeAPI.getState();\n                    let acc_data = state.AccountDetails.acc_data;\n                    acc_data.acc_freqs.push(message.message);\n                    // Dispatch to update Redux Store.\n                    storeAPI.dispatch({\n                        // May need to check whether it is a new:\n                        // 1. Message\n                        // 2. Group\n                        // 3. Friend\n                        // (So I'm suspecting an extra field may be required)\n                        type: message.messageType,\n                        payload: acc_data\n                    });\n                });\n\n                socket.on(\"DELETE_FRIEND_REQUEST\", (message) => {\n                    // Modify acc_data the way the server intends:\n                    let state = storeAPI.getState();\n                    let acc_data = state.AccountDetails.acc_data;\n                    acc_data.acc_freqs.splice(acc_data.acc_freqs.indexOf(message.message), 1);\n                    // Dispatch to update Redux Store.\n                    storeAPI.dispatch({\n                        // May need to check whether it is a new:\n                        // 1. Message\n                        // 2. Group\n                        // 3. Friend\n                        // (So I'm suspecting an extra field may be required)\n                        type: message.messageType,\n                        payload: acc_data\n                    });\n                });\n\n                /*\n                END: Server => Client Endpoints\n                */\n\n                // Server => Client Endpoint for handling server errors.\n                socket.on(\"ERROR_MESSAGE\", (err_message) => {\n                    storeAPI.dispatch({\n                        type: \"SOCKET_ERROR_RECEIVED\",\n                        payload: err_message\n                    });\n                });\n                break;\n            }\n            // This endpoint can only be reached once LOGIN action is dispatched\n            // to initialise the socket endpoint on the redux client.\n            case \"SEND_WEBSOCKET_MESSAGE\": {\n                console.log('SEND_WEBSOCKET_MESSAGE:', action)\n                socket.emit(action.eventName, action.payload);\n                return;\n            }\n        }\n\n        return next(action);\n    }\n}\n\n\nexport default createSocketMiddleware;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js",["189","190"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js",["191","192","193","194"],"import React, { useState, useEffect } from 'react';\nimport './FriendItem.scss';\n\nfunction FriendItem(props) {\n\n  const [interactionState, setInteractionState] = useState(props.friendStatus);\n  // 28 DEC 12:06 AM:\n  // FOR SOME REASON THE SEARCH ICON DOES NOT \n  // RERENDER UPON CHANGE THE SEARCH BAR'S REGEX SEARCH EXPRESSION\n\n  // useEffect(() => {\n  //   console.log(props.friendStatus);\n  //   console.log(interactionState);\n  //   if (props.friendStatus !== interactionState) {\n  //     console.log('--SET!--');\n  //     setInteractionState(props.friendStatus);\n  //   }\n  // })\n\n  const sendFriendReq = () => {\n    props.sendFriendReq({\n      sender_id: props.AccountDetails.acc_data._id,\n      reciever_id: props.acc_id\n    });\n    setInteractionState('SENT');\n  }\n  const deleteFriendReq = () => {\n    props.deleteFriendReq({\n      sender_id: props.AccountDetails.acc_data._id,\n      reciever_id: props.acc_id\n    });\n    setInteractionState('UNSENT');\n  }\n  const removeFriend = async () => {\n    props.removeFriend({\n      sender_id: props.AccountDetails.acc_data._id,\n      reciever_id: props.acc_id\n    });\n    setInteractionState('UNSENT');\n  }\n\n  console.log(props.friendStatus);\n  console.log(interactionState);\n\n  return (\n    <>\n      <div className=\"frienditem\">\n        <div className=\"frienditem-header\">\n          <h6>{props.userName}</h6>\n          <p>{props.fname}{\" \"}{props.lname}</p>\n        </div>\n\n        {\n          <>\n            {interactionState == 'UNSENT'\n              ?\n              <button key={props.AccountDetails.acc_data._id + '_1'} onClick={sendFriendReq} className=\"frienditem-icon\">\n                <i className=\"fas fa-user-plus\"></i>\n              </button>\n\n              :\n              (\n                interactionState == 'SENT'\n                  ?\n                  <button key={props.AccountDetails.acc_data._id + '_2'} onClick={deleteFriendReq} className=\"frienditem-icon\">\n                    <i className=\"fas fa-check\"></i>\n                  </button>\n                  :\n                  (\n                    interactionState == 'FRIENDS'\n                      ?\n                      <button key={props.AccountDetails.acc_data._id + '_3'} onClick={removeFriend} className=\"frienditem-icon\">\n                        <i class=\"fas fa-user-minus\"></i>\n                      </button>\n                      :\n                      null\n                  )\n              )\n            }\n          </>\n        }\n      </div>\n    </>\n  )\n}\n\nexport default FriendItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-message-reducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-error-reducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItem.js",["195","196"],"import React, { useState } from 'react';\n\nimport './NotificationItem.scss';\n\nfunction NotificationItem(props) {\n\n  console.log(props);\n\n  const [notificationType, setNotificationType] = useState(props.notificationType);\n\n  const acceptFriendRequest = () => {\n    props.acceptFriendRequest({\n      reciever_id: props.AccountDetails.acc_data._id,\n      sender_id: props.senderId\n    });\n    props.removeFriendReqFromStore({\n      sender_id: props.senderId\n    });\n  }\n  const rejectFriendRequest = () => {\n    props.rejectFriendRequest({\n      reciever_id: props.AccountDetails.acc_data._id,\n      sender_id: props.senderId\n    });\n    props.removeFriendReqFromStore({\n      sender_id: props.senderId\n    });\n    // setNotificationType(null);\n    // This is a really bad way of removing an FR from store to force an update!\n  }\n\n  return (\n    <>\n      {notificationType == 'FRIEND_REQUEST'\n        ?\n        <div className=\"notification-item\">\n          <div className=\"notification-item-header\">\n            <h6>{props.notificationTitle}</h6>\n            <p>{props.notificationLabel}</p>\n          </div>\n          <div className=\"notification-item-icons\">\n            {/* Accept Friend Request */}\n            <button onClick={acceptFriendRequest} className=\"notification-item-icons-item\">\n              <i className=\"fas fa-check-circle\"></i>\n            </button>\n            {/* Delete Friend Request */}\n            <button onClick={rejectFriendRequest} className=\"notification-item-icons-item\">\n              <i className=\"fas fa-times-circle\"></i>\n            </button>\n          </div>\n        </div>\n        :\n        null}\n    </>\n  )\n}\n\nexport default NotificationItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemActions.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":40,"nodeType":"203","messageId":"204","endLine":1,"endColumn":47},{"ruleId":"205","severity":1,"message":"206","line":95,"column":30,"nodeType":"207","messageId":"208","endLine":95,"endColumn":32},{"ruleId":"209","severity":1,"message":"210","line":104,"column":15,"nodeType":"211","endLine":104,"endColumn":94},{"ruleId":"212","severity":1,"message":"213","line":114,"column":15,"nodeType":"211","endLine":114,"endColumn":54},{"ruleId":"201","severity":1,"message":"214","line":2,"column":47,"nodeType":"203","messageId":"204","endLine":2,"endColumn":52},{"ruleId":"215","severity":1,"message":"216","line":87,"column":32,"nodeType":"217","messageId":"218","endLine":87,"endColumn":34},{"ruleId":"219","severity":1,"message":"220","line":89,"column":15,"nodeType":"221","messageId":"222","endLine":99,"endColumn":16},{"ruleId":"209","severity":1,"message":"210","line":56,"column":35,"nodeType":"211","endLine":56,"endColumn":113},{"ruleId":"201","severity":1,"message":"223","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"223","line":1,"column":16,"nodeType":"203","messageId":"204","endLine":1,"endColumn":24},{"ruleId":"205","severity":1,"message":"206","line":12,"column":20,"nodeType":"207","messageId":"208","endLine":12,"endColumn":22},{"ruleId":"205","severity":1,"message":"206","line":16,"column":21,"nodeType":"207","messageId":"208","endLine":16,"endColumn":23},{"ruleId":"224","severity":1,"message":"225","line":9,"column":3,"nodeType":"226","messageId":"227","endLine":11,"endColumn":4},{"ruleId":"201","severity":1,"message":"223","line":1,"column":16,"nodeType":"203","messageId":"204","endLine":1,"endColumn":24},{"ruleId":"197","replacedBy":"228"},{"ruleId":"199","replacedBy":"229"},{"ruleId":"219","severity":1,"message":"220","line":10,"column":9,"nodeType":"221","messageId":"222","endLine":72,"endColumn":10},{"ruleId":"201","severity":1,"message":"230","line":6,"column":3,"nodeType":"203","messageId":"204","endLine":6,"endColumn":9},{"ruleId":"205","severity":1,"message":"206","line":71,"column":34,"nodeType":"207","messageId":"208","endLine":71,"endColumn":36},{"ruleId":"201","severity":1,"message":"231","line":1,"column":27,"nodeType":"203","messageId":"204","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"206","line":55,"column":31,"nodeType":"207","messageId":"208","endLine":55,"endColumn":33},{"ruleId":"205","severity":1,"message":"206","line":63,"column":34,"nodeType":"207","messageId":"208","endLine":63,"endColumn":36},{"ruleId":"205","severity":1,"message":"206","line":70,"column":38,"nodeType":"207","messageId":"208","endLine":70,"endColumn":40},{"ruleId":"201","severity":1,"message":"232","line":9,"column":28,"nodeType":"203","messageId":"204","endLine":9,"endColumn":47},{"ruleId":"205","severity":1,"message":"206","line":34,"column":25,"nodeType":"207","messageId":"208","endLine":34,"endColumn":27},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Label' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["233"],["234"],"'Button' is defined but never used.","'useEffect' is defined but never used.","'setNotificationType' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]