[{"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js":"1","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js":"2","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js":"3","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js":"4","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js":"5","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js":"6","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js":"7","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js":"8","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js":"9","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js":"10","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js":"11","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js":"12","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js":"13","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js":"14","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js":"15","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js":"16","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js":"17","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js":"18","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js":"19","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js":"20","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js":"21","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js":"22","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js":"23","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js":"24","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js":"25","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js":"26","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js":"27","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js":"28","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js":"29","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js":"30","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js":"31","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemContainer.js":"32","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemActions.js":"33","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-error-reducer.js":"34","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItem.js":"35","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemContainer.js":"36","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemActions.js":"37","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroup.js":"38","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupContainer.js":"39","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupActions.js":"40","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarReducer.js":"41","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/WelcomeBody/WelcomeBody.js":"42","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderActions.js":"43","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Profile/Profile.js":"44","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Profile/ProfileContainer.js":"45","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/GroupItem/GroupItem.js":"46","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainReducer.js":"47","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/_shared/actions/UpdateLogStateAction.js":"48","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/_shared/actions/ReInitializeStoreAction.js":"49","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/AppContainer.js":"50","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavActions.js":"51","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/TypingPopup/TypingPopupContainer.js":"52","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/TypingPopup/TypingPopup.js":"53","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/TypingPopup/TypingPopupReducer.js":"54"},{"size":549,"mtime":1610595858483,"results":"55","hashOfConfig":"56"},{"size":1009,"mtime":1610618007287,"results":"57","hashOfConfig":"56"},{"size":2268,"mtime":1610751123968,"results":"58","hashOfConfig":"56"},{"size":628,"mtime":1610671802949,"results":"59","hashOfConfig":"56"},{"size":7045,"mtime":1610600056283,"results":"60","hashOfConfig":"56"},{"size":8156,"mtime":1610579797981,"results":"61","hashOfConfig":"56"},{"size":866,"mtime":1610498264760,"results":"62","hashOfConfig":"56"},{"size":631,"mtime":1610492679610,"results":"63","hashOfConfig":"56"},{"size":296,"mtime":1610444485866,"results":"64","hashOfConfig":"56"},{"size":3890,"mtime":1610751141732,"results":"65","hashOfConfig":"56"},{"size":853,"mtime":1610519829407,"results":"66","hashOfConfig":"56"},{"size":729,"mtime":1610521139214,"results":"67","hashOfConfig":"56"},{"size":5006,"mtime":1610599071816,"results":"68","hashOfConfig":"56"},{"size":4098,"mtime":1609902830288,"results":"69","hashOfConfig":"56"},{"size":1162,"mtime":1609630625015,"results":"70","hashOfConfig":"56"},{"size":499,"mtime":1609628437061,"results":"71","hashOfConfig":"56"},{"size":451,"mtime":1609818162049,"results":"72","hashOfConfig":"56"},{"size":816,"mtime":1610597515894,"results":"73","hashOfConfig":"56"},{"size":640,"mtime":1610712961203,"results":"74","hashOfConfig":"56"},{"size":5620,"mtime":1610774915584,"results":"75","hashOfConfig":"56"},{"size":232,"mtime":1608442202017,"results":"76","hashOfConfig":"56"},{"size":1521,"mtime":1610596531351,"results":"77","hashOfConfig":"56"},{"size":987,"mtime":1610716106699,"results":"78","hashOfConfig":"56"},{"size":284,"mtime":1608636198762,"results":"79","hashOfConfig":"56"},{"size":0,"mtime":1608636264966,"results":"80","hashOfConfig":"56"},{"size":342,"mtime":1609631890922,"results":"81","hashOfConfig":"56"},{"size":7270,"mtime":1610774878050,"results":"82","hashOfConfig":"56"},{"size":480,"mtime":1610519842622,"results":"83","hashOfConfig":"56"},{"size":302,"mtime":1608883499567,"results":"84","hashOfConfig":"56"},{"size":2659,"mtime":1609902751021,"results":"85","hashOfConfig":"56"},{"size":2965,"mtime":1610596510215,"results":"86","hashOfConfig":"56"},{"size":568,"mtime":1609483905035,"results":"87","hashOfConfig":"56"},{"size":479,"mtime":1609483935080,"results":"88","hashOfConfig":"56"},{"size":406,"mtime":1609233519131,"results":"89","hashOfConfig":"56"},{"size":1672,"mtime":1609482614517,"results":"90","hashOfConfig":"56"},{"size":740,"mtime":1609482511630,"results":"91","hashOfConfig":"56"},{"size":1167,"mtime":1609482497006,"results":"92","hashOfConfig":"56"},{"size":2823,"mtime":1609892159962,"results":"93","hashOfConfig":"56"},{"size":399,"mtime":1609455837880,"results":"94","hashOfConfig":"56"},{"size":160,"mtime":1609676565181,"results":"95","hashOfConfig":"56"},{"size":491,"mtime":1609819151034,"results":"96","hashOfConfig":"56"},{"size":781,"mtime":1609895611912,"results":"97","hashOfConfig":"56"},{"size":614,"mtime":1609819172096,"results":"98","hashOfConfig":"56"},{"size":5440,"mtime":1610597731634,"results":"99","hashOfConfig":"56"},{"size":287,"mtime":1610419343489,"results":"100","hashOfConfig":"56"},{"size":335,"mtime":1610438667236,"results":"101","hashOfConfig":"56"},{"size":614,"mtime":1610671611554,"results":"102","hashOfConfig":"56"},{"size":132,"mtime":1610452703223,"results":"103","hashOfConfig":"56"},{"size":225,"mtime":1610497723955,"results":"104","hashOfConfig":"56"},{"size":260,"mtime":1610503209278,"results":"105","hashOfConfig":"56"},{"size":119,"mtime":1610521110684,"results":"106","hashOfConfig":"56"},{"size":387,"mtime":1610673691035,"results":"107","hashOfConfig":"56"},{"size":1421,"mtime":1610716119315,"results":"108","hashOfConfig":"56"},{"size":1032,"mtime":1610749693547,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"7n2hzo",{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"112"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"112"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js",[],["235","236"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js",["237"],"import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport rootReducer from './rootReducer';\nimport createSocketMiddleware from './utils/socket-middleware';\n\nconst middleware = [thunk, createSocketMiddleware()];\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Configuration If NPM Package Isn't needed.\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst extendedMiddleware = process.env.NODE_ENV === 'production' ? applyMiddleware(...middleware) : composeWithDevTools(applyMiddleware(...middleware))\n\nconst store = createStore(\n  persistedReducer,\n  extendedMiddleware\n)\nconst persistor = persistStore(store);\n\nexport { store, persistor };","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js",["238","239","240"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js",["241"],"import React from 'react';\nimport {\n  Modal,\n  Form,\n  FormGroup,\n  Input,\n  FormFeedback\n} from 'reactstrap';\n\n// Child Components:\nimport NewAccount from '../NewAccount/NewAccount';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as crypto from 'crypto';\nimport './Login.scss';\n// require('crypto').randomBytes(64).toString('hex')\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Login\n      userName: \"\",\n      password: \"\",\n      // Modal\n      modal: false,\n      loginInvalid: false\n    };\n    // SetOnChange (State Managing Callback)\n    this.setOnChange = this.setOnChange.bind(this);\n    // Guest Login Handler\n    this.guestLoginHandler = this.guestLoginHandler.bind(this);\n    // Login Request Handler\n    this.handleLogin = this.handleLogin.bind(this);\n    // Modal Trigger\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  /*\n  Future Refactors: handleLogin(event) should be done through TCP socket conenction\n  as opposed to a HTTP Post handler to reduce incoming server traffic.\n  */\n  async handleLogin(event) {\n    // 1. Verify the account username exists (/w the corresponding password).\n    event.preventDefault();\n    await fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.userName,\n        password: this.state.password\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        // If Unsuccesfful:\n        // Trigger Alert/Feedback\n        if ('code' in data) {\n          // Control FeedBack.\n          this.setState({ loginInvalid: true })\n        }\n        // If Succesful:\n        // Save account details to redux state.\n        // Redirect to Messaging Page.\n        else {\n          // Should be a single account stored onto Redux Store.\n          this.props.storeAccountDetails(data['account'][0]);\n          this.props.storeTokenDetails({\n            accessToken: data['accessToken'],\n            refreshToken: data['refreshToken']\n          });\n          // Redirect Page To Other Main Page Component.\n          this.props.updateLogState(true);\n          this.props.setClientIdWrapper(crypto.randomBytes(32).toString('hex'));\n        }\n      })\n  }\n\n  // Create Account Handlers\n  setOnChange(event) {\n    if (this.state.loginInvalid) {\n      this.setState({ loginInvalid: false });\n    }\n    let fieldID = event.target.id;\n    let obj = {};\n    obj[`${fieldID}`] = event.target.value;\n    this.setState(obj);\n    this.setState({\n      emailinvalid: false,\n      usrinvalid: false,\n      pwinvalid: false\n    })\n  }\n\n  // Handles Modal Triggering\n  toggleModal() {\n    this.setState({ modal: !this.state.modal })\n  }\n\n  //\n  async guestLoginHandler(event) {\n    let randStr = crypto.randomBytes(16).toString('hex');\n    await fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/newaccount`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        nafname: 'Guest',\n        nalname: randStr,\n        nausername: `Guest_${randStr}`,\n        naemailaddr: `Guest_${randStr}`,\n        napassword1: '',\n        napassword2: '',\n        nadobday: 30,\n        nadobmonth: 12,\n        nadobyear: 2020,\n        nagender: 'N'\n      })\n    })\n\n    // 1. Verify the account username exists (/w the corresponding password).\n    event.preventDefault();\n    await fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: `Guest_${randStr}`,\n        password: ''\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        // If Unsuccesfful:\n        // Trigger Alert/Feedback\n        if ('code' in data) {\n          // Control FeedBack.\n          this.setState({ loginInvalid: true })\n        }\n        // If Succesful:\n        // Save account details to redux state.\n        // Redirect to Messaging Page.\n        else {\n          // Should be a single account stored onto Redux Store.\n          this.props.storeAccountDetails(data['account'][0]);\n          this.props.storeTokenDetails({\n            accessToken: data['accessToken'],\n            refreshToken: data['refreshToken']\n          });\n          // Redirect Page To Other Main Page Component.\n          this.props.updateLogState(true);\n          // setClientIdWrapper prompts the redirect to /main indirectly with the\n          // componentDidUpdate() lifecycle in App.js\n          this.props.setClientIdWrapper(crypto.randomBytes(32).toString('hex'));\n        }\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"wrapper fadeInDown\" onSubmit={this.handleLogin}>\n          <div id=\"formContent\">\n            <div className=\"wrapper-img fadeIn first\">\n              <img src=\"https://img.icons8.com/cute-clipart/256/000000/chat.png\" id=\"icon\" />\n            </div>\n            <Form>\n              <FormGroup>\n                {this.state.loginInvalid\n                  ?\n                  <>\n                    <Input type=\"text\" id=\"userName\" className=\"fadeIn second\" name=\"userName\" placeholder=\"Username\" onChange={this.setOnChange} invalid />\n                    <Input type=\"password\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"Password\" onChange={this.setOnChange} invalid />\n                  </>\n                  :\n                  <>\n                    <Input type=\"text\" id=\"userName\" className=\"fadeIn second\" name=\"userName\" placeholder=\"Username\" onChange={this.setOnChange} />\n                    <Input type=\"password\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  </>\n                }\n                <FormFeedback invalid>Username or Password not found</FormFeedback>\n              </FormGroup>\n              <FormGroup>\n                <Input type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\" />\n              </FormGroup>\n            </Form>\n\n            {/* Uncomment when you want to create nodemailer dependency with this app! */}\n            <div className=\"formContent-guest-login\">\n              <button className=\"guest-login fadeIn fourth\" onClick={this.guestLoginHandler}>Log In As Guest</button>\n            </div>\n\n            <div id=\"formFooter\">\n              <button className=\"createAccount fadeIn fifth\" onClick={this.toggleModal}>Create Account</button>\n              {/* newAccount Modal */}\n              <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n                <NewAccount />\n              </Modal>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Login;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js",["242","243","244"],"import React from 'react';\nimport { ModalHeader, ModalBody, ModalFooter, Label, Input, Form, FormGroup, FormFeedback } from 'reactstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './NewAccount.scss';\n\nclass NewAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // New Account\n      nafname: \"\",\n      nalname: \"\",\n      nausername: \"\",\n      naemailaddr: \"\",\n      napassword1: \"\",\n      napassword2: \"\",\n      nadobday: 1,\n      nadobmonth: 1,\n      nadobyear: (new Date()).getFullYear(),\n      nagender: \"N\",\n      usrinvalid: false,\n      emailinvalid: false,\n      pwinvalid: false,\n    }\n    // SetOnChange (State Managing Callback)\n    this.setOnChange = this.setOnChange.bind(this);\n    // Create Account Request Handler\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    // Modal Trigger\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  // Create Account Handlers\n  setOnChange(event) {\n    let fieldID = event.target.id;\n    let obj = {};\n    obj[`${fieldID}`] = event.target.value;\n    this.setState(obj);\n    this.setState({\n      emailinvalid: false,\n      usrinvalid: false,\n      pwinvalid: false\n    })\n  }\n\n  // Feedbback Togglers\n  invalidateEmailFeedback() {\n    this.setState({ emailinvalid: true })\n  }\n  invalidateUserFeedback() {\n    this.setState({ usrinvalid: true })\n  }\n  invalidatePasswordFeedback() {\n    this.setState({ pwinvalid: true })\n  }\n\n  handleNewAccount(event) {\n    // Check #1: Check if passwords match:\n    // Check #2 Check if username is being used already:\n    // Check #3 Check if email is being used already:\n    fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/newaccount`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        nafname: this.state.nafname,\n        nalname: this.state.nalname,\n        nausername: this.state.nausername,\n        naemailaddr: this.state.naemailaddr,\n        napassword1: this.state.napassword1,\n        napassword2: this.state.napassword2,\n        nadobday: this.state.nadobday,\n        nadobmonth: this.state.nadobmonth,\n        nadobyear: this.state.nadobyear,\n        nagender: this.state.nagender\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        // If 'data' is an array, then it has errors\n        if (Array.isArray(data)) {\n          // Handles error messages\n          data.map((item, idx) => {\n            if ('code' in item) {\n              switch (item.code) {\n                case \"EMAIL_REGISTERED\":\n                  this.invalidateEmailFeedback();\n                  break;\n                case \"USERNAME_REGISTERED\":\n                  this.invalidateUserFeedback();\n                  break;\n                case \"PASSWORD_MISMATCH\":\n                  this.invalidatePasswordFeedback();\n                  break;\n              }\n            }\n          })\n          // If 'data' is an object, then it has no errors\n        } else {\n          // Close Modal (Probably Trigger an alert or something asw to tell the user they signed up!)\n          this.toggleModal();\n        }\n      })\n  }\n\n  // Handles Modal Triggering\n  toggleModal() {\n    this.setState({ modal: !this.state.modal })\n  }\n\n\n  render() {\n    let days = [];\n    let months = [];\n    let years = [];\n    for (let i = 1; i <= 31; i++) { days.push(i); }\n    for (let i = 1; i <= 12; i++) { months.push(i); }\n    for (let i = 1900; i <= (new Date()).getFullYear(); i++) { years.push(i); }\n    return (\n      <>\n        <ModalHeader toggle={this.toggleModal}><h3>Sign Up</h3></ModalHeader>\n        <ModalBody>\n\n          <Form className=\"createAccount-form container\">\n            <FormGroup className=\"createAccount-form-name\">\n              {/* Name Fields */}\n              <Input type=\"text\" id=\"nafname\" name=\"nafname\" placeholder=\"First Name\" onChange={this.setOnChange} />\n              <Input type=\"text\" id=\"nalname\" name=\"nalname\" placeholder=\"Last Name\" onChange={this.setOnChange} />\n            </FormGroup>\n            {/* Email Field */}\n            <FormGroup className=\"createAccount-form-email\">\n              {\n                this.state.emailinvalid\n                  ?\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} invalid />\n                  :\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Emails is taken</FormFeedback>\n            </FormGroup>\n            {/* Username Field */}\n            <FormGroup className=\"createAccount-form-username\">\n              {\n                this.state.usrinvalid ?\n                  <Input invalid type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n                  :\n                  <Input type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Username is taken</FormFeedback>\n            </FormGroup>\n            {/* Password Fields */}\n            <FormGroup className=\"createAccount-form-password\">\n              {this.state.pwinvalid ?\n                <>\n                  <Input invalid type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input invalid type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n                :\n                <>\n                  <Input type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n              }\n              <FormFeedback invalid>You will not be able to see this</FormFeedback>\n            </FormGroup>\n            <FormGroup className=\"createAccount-form-dob\">\n              <div className=\"createAccount-form-dob-label\">\n                <h6>Date Of Birth:</h6>\n              </div>\n              {/* Date Of Birth Selectors: */}\n              <select onChange={this.setOnChange} name=\"nadobday\" id=\"nadobday\" className=\"dob-day\" value={this.state.nadobday}>\n                {days.map((val, idx) => (\n                  <option key={uuidv4()} value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobmonth\" id=\"nadobmonth\" className=\"dob-month\" value={this.state.nadobmonth}>\n                {months.map((val, idx) => (\n                  <option key={uuidv4()} value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobyear\" id=\"nadobyear\" className=\"dob-year\" value={this.state.nadobyear}>\n                {years.map((val, idx) => (\n                  <option key={uuidv4()} value={val}>{val}</option>\n                ))\n                }\n              </select>\n            </FormGroup>\n            {/* Gender Selector: */}\n            <FormGroup>\n              <div className=\"createAccount-form-gender-label\">\n                <h6>Gender:</h6>\n              </div>\n              <select onChange={this.setOnChange} name=\"nagender\" id=\"nagender\" className=\"createAccount-form-gender\">\n                <option key={uuidv4()} value=\"N\">---Choose A Gender Option---</option>\n                <option key={uuidv4()} value=\"M\">Male</option>\n                <option key={uuidv4()} value=\"F\">Female</option>\n              </select>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter className=\"createAccount-footer\">\n          <button className=\"signUp\" onClick={this.handleNewAccount}>Create Account</button>\n          {/* Adds Space: {' '} */}\n        </ModalFooter>\n      </>\n    )\n  }\n}\n\nexport default NewAccount;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js",["245","246","247","248"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js",["249"],"import { connect } from \"react-redux\";\nimport { reInitializeStore } from \"../_shared/actions/ReInitializeStoreAction\";\n\n// Component\nimport Main from './Main';\n\n// Actions\nimport { addClientToStore, emitAccountDetails, initializeClient, removeClientFromStore } from \"./MainActions\";\n\n\n\nconst mapStateToProps = (state) => ({\n  AccountDetails: state.AccountDetails,\n  SocketErrorDetails: state.SocketErrorDetails,\n  SideBarDetails: state.SideBarDetails,\n  ClientDetails: state.ClientDetails\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  emitAccountDetails: (data) => dispatch(emitAccountDetails(data)),\n  initializeClient: () => dispatch(initializeClient()),\n  addClientToStore: (data) => dispatch(addClientToStore(data)),\n  reInitializeStore: () => dispatch(reInitializeStore()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js",["250"],"import React from 'react';\n\n// Sass:\nimport './MainNav.scss';\n\n// React Router:\nimport { Link } from 'react-router-dom';\n\n\n// ReactStrap Dependencies:\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n} from 'reactstrap';\n// uuid Dependency:\nimport { v4 as uuidv4 } from 'uuid';\n\n// React Router Dependencies:\nimport {\n  Redirect\n} from 'react-router';\n\n// Containers:\nimport FriendSearch from '../FriendSearch/FriendSearchContainer';\nimport NotificationItem from '../NotificationItem/NotificationItemContainer';\n\n\nclass MainNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      optionsIsOpen: false,\n      notificationsIsOpen: false,\n      newFriendModalState: false,\n      redirectToLogin: false\n    }\n    this.toggleOptions = this.toggleOptions.bind(this);\n    this.toggleNotifications = this.toggleNotifications.bind(this);\n    this.toggleNewFriend = this.toggleNewFriend.bind(this);\n    this.logoutHandler = this.logoutHandler.bind(this);\n    console.log('CONSTRUCT MainNav')\n  }\n\n  toggleOptions() {\n    this.setState({ optionsIsOpen: !this.state.optionsIsOpen });\n  }\n\n  toggleNotifications() {\n    this.setState({ notificationsIsOpen: !this.state.notificationsIsOpen });\n  }\n\n  toggleNewFriend() {\n    this.setState({ newFriendModalState: !this.state.newFriendModalState });\n  }\n\n  async logoutHandler(e) {\n    console.log(this.state.redirectToLogin);\n    await this.props.setClientIdWrapper('');\n    await this.setState({ redirectToLogin: true });\n    await this.props.updateLogState(false);\n    await this.props.reInitializeStore();\n    this.props.resetClientStore();\n  }\n\n  render() {\n    console.log(this.state.redirectToLogin);\n    let acc_freqs = this.props.AccountDetails.acc_data.acc_freqs\n    if (!acc_freqs) {\n      return (\n        <>\n          No Friend Requests Found.\n        </>\n      )\n    }\n    return (\n      <>\n        <div>\n          <Navbar className=\"mainnav\" color=\"light\" light expand=\"md\">\n            <NavbarBrand href=\"/\"><img src=\"https://img.icons8.com/cute-clipart/64/000000/chat.png\" id=\"icon\" /></NavbarBrand>\n            <Nav className=\"mr-auto\"></Nav>\n            {/* Add New User Feature */}\n            <NavLink onClick={this.toggleNewFriend} href=\"#\"><i id=\"new-user\" className=\"fas fa-plus-square\"></i></NavLink>\n            <Modal isOpen={this.state.newFriendModalState} toggle={this.toggleNewFriend} className=\"\">\n              <ModalHeader toggle={this.toggleNewFriend}>Add Friend</ModalHeader>\n              <FriendSearch />\n            </Modal>\n            {/* Notifications Feature Trigger */}\n            {acc_freqs.length > 0\n              ?\n              <NavLink onClick={this.toggleNotifications} href=\"#\">\n                <i id=\"notifications\" className=\"fas fa-bell\"></i>\n                <span className=\"badge\">{acc_freqs.length}</span>\n              </NavLink>\n              :\n              <NavLink onClick={this.toggleNotifications} href=\"#\">\n                <i id=\"notifications\" className=\"fas fa-bell\"></i>\n              </NavLink>\n            }\n            {/* Notifications Feature Body */}\n            <Modal isOpen={this.state.notificationsIsOpen} toggle={this.toggleNotifications} className=\"\">\n              <ModalHeader toggle={this.toggleNotifications}>Friend Requests</ModalHeader>\n              {acc_freqs.map((acc_freq) => {\n                return (\n                  <>\n                    <NotificationItem\n                      key={uuidv4()}\n                      senderId={acc_freq.fr_sender_id._id}\n                      senderData={acc_freq.fr_sender_id}\n                      notificationTitle={`${acc_freq.fr_sender_id.acc_usrname}`}\n                      notificationLabel=\"Friend Request\"\n                      notificationType={'FRIEND_REQUEST'} />\n                  </>\n                )\n              })}\n            </Modal>\n\n            {/* Caret Dropwon Feature */}\n            <UncontrolledDropdown>\n              <DropdownToggle nav>\n                <i className=\"fas fa-caret-down\"></i>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <Link to={`/profile/${this.props.AccountDetails.acc_data._id}`}>\n                  <DropdownItem>\n                    <span><i className=\"fas fa-user\"></i>{\" \"}Profile</span>\n                  </DropdownItem>\n                </Link>\n                <DropdownItem divider />\n                <DropdownItem onClick={this.logoutHandler}>\n                  <span><i className=\"fas fa-power-off\"></i>{\" \"}Logout</span>\n                  {\n                    this.state.redirectToLogin\n                      ?\n                      <Redirect to=\"/\" />\n                      :\n                      null\n                  }\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Navbar>\n        </div>\n      </>\n    )\n\n  }\n}\n\nexport default MainNav;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js",["251","252","253","254","255"],"import React from 'react';\n\n// Reactstrap dependencies:\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\n// uuid\nimport { v4 as uuidv4 } from 'uuid';\n\n//Components:\nimport ChatItem from '../ChatItem/ChatItem';\nimport NewGroupForm from '../NewGroup/NewGroupContainer';\n\n// Style Sheets\nimport './SideBar.scss';\n\nclass SideBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0,\n      openModal: false,\n    }\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleClickEvt = this.handleClickEvt.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({ openModal: !this.state.openModal });\n  }\n\n  handleClickEvt(idx) {\n    this.props.updateSelectedChatItem(idx);\n  }\n\n  // Component Initial State:\n  // Chat Windows For All Friends/Groups\n  // (Get from ACCOUNT_IN entity for the corresponding acc_id stored on redux state)\n  // Consequent Rerenders:\n  // Potentially New Chat Groups (Includes Friends) being added\n  render() {\n    let acc_grps = this.props.AccountDetails.acc_data.acc_grps;\n    return (\n      <>\n        <div className=\"sidebar\">\n          <div className=\"sidebar-header\">\n            <h3>Chats</h3>\n            <button onClick={this.toggleModal} className=\"sidebar-header-newgroup-button\">\n              <i className=\"fas fa-user-plus\"></i>\n            </button>\n            <Modal isOpen={this.state.openModal} toggle={this.toggleModal} className=\"\">\n              <ModalHeader toggle={this.toggleModal}>New Group</ModalHeader>\n              <NewGroupForm toggleModalHandler={this.toggleModal} />\n            </Modal>\n          </div>\n          <hr />\n          {/* Friends/Groups Item Entry */}\n          <div className=\"sidebar-body\">\n            <div onClick={() => this.handleClickEvt(0)}>\n              {0 == this.props.SideBarDetails.selectedChatItem\n                ?\n                <ChatItem\n                  userId={`Welcome ${this.props.AccountDetails.acc_data.acc_usrname}!`}\n                  userMsg={`Click here for more details.`}\n                  key={uuidv4()}\n                  isSelected={true}\n                />\n                :\n                <ChatItem\n                  userId={`Welcome ${this.props.AccountDetails.acc_data.acc_usrname}`}\n                  userMsg={`Click here for more details.`}\n                  key={uuidv4()}\n                  isSelected={false}\n                />\n              }\n            </div>\n            {/* Sample World Chat Component (Will need to create this entity in the DB later on!) */}\n            {/* <div onClick={() => this.handleClickEvt(1)}>\n              {1 == this.props.SideBarDetails.selectedChatItem\n                ?\n                <ChatItem\n                  userId={`World Chat`}\n                  userMsg={`Click here to talk to other users.`}\n                  key={uuidv4()}\n                  isSelected={true}\n                />\n                :\n                <ChatItem\n                  userId={`World Chat`}\n                  userMsg={`Click here to talk to other users.`}\n                  key={uuidv4()}\n                  isSelected={false}\n                />\n              }\n            </div> */}\n            {/* All the ChatGroups the user/account is currently in. */}\n            {\n              acc_grps.map((grp, idx) => (\n                <div onClick={() => this.handleClickEvt(idx + 1)}>\n                  {idx + 1 == this.props.SideBarDetails.selectedChatItem\n                    ?\n                    <ChatItem\n                      userId={grp.g_title}\n                      userMsg={grp.g_type}\n                      key={uuidv4()}\n                      isSelected={true}\n                    />\n                    :\n                    <ChatItem\n                      userId={grp.g_title}\n                      userMsg={grp.g_type}\n                      key={uuidv4()}\n                      isSelected={false}\n                    />}\n                </div>\n              ))\n            }\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default SideBar;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js",["256"],"import React, { useState } from 'react';\n\nimport './ChatItem.scss';\n\n\nclass ChatItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatName: props.userId,\n      chatMsg: props.userMsg,\n      isSelected: props.isSelected\n    }\n  }\n  // Initial State: Most Recent Message On The Database Via an HTTP request.\n  // Consequent Rerenders: New Dynamic Messages sent to this specific chat \n  // (Requires socket endpoints to emit the corresponding data from the client)\n  // const [chatName, setChatName] = useState(props.userId);\n  // const [chatMsg, setChatMsg] = useState(props.userMsg);\n  // const [isSelected, setSelectedState] = useState(props.isSelected);\n  // console.log(props);\n  render() {\n    return (\n      this.state.isSelected\n        ?\n        // Selected Render\n        <div className=\"chatitem selected\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n        :\n        // Not Selected Render\n        <div className=\"chatitem\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n    )\n  }\n}\nexport default ChatItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js",["257","258","259"],"import React, { useState } from 'react';\n\nimport './ChatHeader.scss';\n\nfunction ChatHeader({ chatName, chatType, viewedGrp, leaveGroup, leaveGroupStore, acc_id }) {\n\n  const handleLeaveGroup = () => {\n    leaveGroupStore({\n      g_id: viewedGrp._id,\n    })\n    leaveGroup({\n      g_id: viewedGrp._id,\n      acc_id: acc_id\n    });\n  }\n\n  return (\n    <>\n      <div className=\"chat-header\">\n        <h5>{chatName}</h5>\n        {\n          // 'FRIENDS IS NOT IMPLEMENTED YET, SO FORGET ABOUT IT!'\n          chatType == 'FRIENDS'\n            ?\n            <button>Remove Friend</button>\n            :\n            (chatType == 'GROUP'\n              ?\n              <button onClick={handleLeaveGroup}>Leave Group</button>\n              :\n              null)\n        }\n      </div>\n    </>\n  )\n}\n\nexport default ChatHeader;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js",["260","261","262","263","264"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js",["265"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './Message.scss';\n\nfunction Message({ senderName, msgString, isSender, marginBottom, messageSpan, senderId }) {\n\n  return (\n    isSender\n      ?\n      // Sender:\n      (\n        marginBottom\n          ?\n          <div className=\"message sender margin-bottom\">\n            <p>{msgString}</p>\n          </div>\n          :\n          <div className=\"message sender\">\n            <p>{msgString}</p>\n          </div>\n      )\n      :\n      (// Others User Messages:\n        marginBottom\n          ?\n          <>\n            <span className=\"message-span\">\n              <Link to={\n                {\n                  pathname: `/profile/${senderId}`,\n                  key: uuidv4(), // we could use Math.random, but that's not guaranteed unique.\n                  state: {\n                    applied: true\n                  }\n                }\n              }>\n                {senderName}\n              </Link>\n            </span>\n            <div className=\"message reciever margin-bottom\">\n              <p>{msgString}</p>\n            </div>\n          </>\n          :\n          <>\n            <span className=\"message-span\">\n              <Link to={`/profile/${senderId}`}>\n                {senderName}\n              </Link>\n            </span>\n            <div className=\"message reciever\">\n              <p>{msgString}</p>\n            </div>\n          </>\n      )\n  )\n}\n\nexport default Message;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js",[],["266","267"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js",["268","269","270","271","272"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js",["273"],"import React from 'react';\n\nimport {\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './FriendSearch.scss';\n\n// Components:\nimport FriendItem from '../FriendItem/FriendItemContainer';\nimport NotificationItem from '../NotificationItem/NotificationItemContainer';\n\n/*\nForm Body That Controls How The New Friend Feature Adds New Friends.\n*/\nclass FriendSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: '',\n      emitSearch: false,\n      searchData: []\n    }\n    this.searchTimeout = null;\n    this.handleSearchAccount = this.handleSearchAccount.bind(this);\n  }\n\n  handleSearchAccount(event) {\n    this.setState({ searchString: event.target.value });\n    clearTimeout(this.searchTimeout);\n    this.searchTimeout = setTimeout(() => {\n      fetch(`${window.location.protocol}//${window.location.host}/api/search/getFriends/${this.props.AccountDetails.acc_data._id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userNameQuery: event.target.value\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          // console.log(data[0]['frStatus']);\n          this.setState({ searchData: data });\n        })\n    }, 3000)\n  }\n\n\n\n  render() {\n    return (\n      <>\n        <ModalBody>\n          {this.state.searchData.map((accountItem) => (\n            accountItem.frStatus == 'R_SENT'\n              ?\n              <NotificationItem\n                key={uuidv4()}\n                senderId={accountItem._id}\n                notificationTitle={accountItem.acc_usrname}\n                notificationLabel=\"Friend Request\"\n                notificationType={'FRIEND_REQUEST'}\n              />\n              :\n              <FriendItem\n                key={uuidv4()}\n                acc_id={accountItem._id}\n                friendStatus={accountItem.frStatus}\n                userName={accountItem.acc_usrname}\n                fname={accountItem.acc_fname}\n                lname={accountItem.acc_lname}\n                searchData={accountItem}\n              />\n          )\n          )}\n          {/* <FriendItem friendStatus={\"PENDING\"} userName=\"Friendbro\" fname=\"Al\" lname=\"Stein\" />\n          <FriendItem friendStatus={\"ACCEPTED\"} userName=\"Requestbro\" fname=\"Jeff\" lname=\"Thew\" /> */}\n\n        </ModalBody>\n        <ModalFooter>\n          <input onChange={this.handleSearchAccount} type=\"text\" placeholder=\"Search Users...\" />\n        </ModalFooter>\n      </>\n    )\n  }\n}\n\nexport default FriendSearch;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js",["274","275","276","277"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './FriendItem.scss';\n\nfunction FriendItem(props) {\n\n  const [interactionState, setInteractionState] = useState(props.friendStatus);\n  // 5 JAN 12:06 AM:\n  // FOR SOME REASON THE SEARCH ICON DOES NOT \n  // RERENDER UPON CHANGE THE SEARCH BAR'S REGEX SEARCH EXPRESSION\n\n  // useEffect(() => {\n  //   console.log(props.friendStatus);\n  //   console.log(interactionState);\n  //   if (props.friendStatus !== interactionState) {\n  //     console.log('--SET!--');\n  //     setInteractionState(props.friendStatus);\n  //   }\n  // })\n\n  const sendFriendReq = () => {\n    props.sendFriendReq({\n      sender_id: props.AccountDetails.acc_data._id,\n      reciever_id: props.acc_id\n    });\n    setInteractionState('SENT');\n  }\n  const deleteFriendReq = () => {\n    props.deleteFriendReq({\n      sender_id: props.AccountDetails.acc_data._id,\n      reciever_id: props.acc_id\n    });\n    setInteractionState('UNSENT');\n  }\n  const removeFriend = async () => {\n    props.removeFriend({\n      sender_id: props.AccountDetails.acc_data._id,\n      reciever_id: props.acc_id\n    });\n    setInteractionState('UNSENT');\n  }\n\n  return (\n    <>\n      <div className=\"frienditem\">\n        <Link\n          to={\n            {\n              pathname: `/profile/${props.acc_id}`,\n              key: uuidv4(), // we could use Math.random, but that's not guaranteed unique.\n              state: {\n                applied: true\n              }\n            }\n          }\n          style={{ color: 'black' }}>\n          <div className=\"frienditem-header\">\n            <h6>{props.userName}</h6>\n            <p>{props.fname}{\" \"}{props.lname}</p>\n          </div>\n        </Link>\n\n        {props.acc_id !== props.AccountDetails.acc_data._id\n          ?\n          <>\n            {interactionState == 'UNSENT'\n              ?\n              <button key={props.AccountDetails.acc_data._id + '_1'} onClick={sendFriendReq} className=\"frienditem-icon\">\n                <i className=\"fas fa-user-plus\"></i>\n              </button>\n\n              :\n              (\n                interactionState == 'SENT'\n                  ?\n                  <button key={props.AccountDetails.acc_data._id + '_2'} onClick={deleteFriendReq} className=\"frienditem-icon\">\n                    <i class=\"fas fa-user-minus\"></i>\n                  </button>\n                  :\n                  (\n                    interactionState == 'FRIENDS'\n                      ?\n                      <button key={props.AccountDetails.acc_data._id + '_3'} onClick={removeFriend} className=\"frienditem-icon\">\n                        <i className=\"fas fa-check\"></i>\n                      </button>\n                      :\n                      null\n                  )\n              )\n            }\n          </>\n          :\n          null\n        }\n      </div>\n    </>\n  )\n}\n\nexport default FriendItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-error-reducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItem.js",["278","279"],"import React, { useState } from 'react';\n\nimport './NotificationItem.scss';\n\nfunction NotificationItem(props) {\n\n  const [notificationType, setNotificationType] = useState(props.notificationType);\n\n  const acceptFriendRequest = () => {\n    // Update the accepting user's redux store to correspond with the the database.\n    props.addFriendToStore(props.senderData);\n    props.acceptFriendRequest({\n      reciever_id: props.AccountDetails.acc_data._id,\n      sender_id: props.senderId\n    });\n    props.removeFriendReqFromStore({\n      sender_id: props.senderId\n    });\n  }\n  const rejectFriendRequest = () => {\n    props.rejectFriendRequest({\n      reciever_id: props.AccountDetails.acc_data._id,\n      sender_id: props.senderId\n    });\n    props.removeFriendReqFromStore({\n      sender_id: props.senderId\n    });\n  }\n\n  return (\n    <>\n      {notificationType == 'FRIEND_REQUEST'\n        ?\n        <div className=\"notification-item\">\n          <div className=\"notification-item-header\">\n            <h6>{props.notificationTitle}</h6>\n            <p>{props.notificationLabel}</p>\n          </div>\n          <div className=\"notification-item-icons\">\n            {/* Accept Friend Request */}\n            <button onClick={acceptFriendRequest} className=\"notification-item-icons-item\">\n              <i className=\"fas fa-check-circle\"></i>\n            </button>\n            {/* Delete Friend Request */}\n            <button onClick={rejectFriendRequest} className=\"notification-item-icons-item\">\n              <i className=\"fas fa-times-circle\"></i>\n            </button>\n          </div>\n        </div>\n        :\n        null}\n    </>\n  )\n}\n\nexport default NotificationItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroup.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarReducer.js",["280"],"import SideBar from \"./SideBar\"\n\nconst initialState = {\n  selectedChatItem: 0\n}\n\nfunction SideBarReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'UPDATE_SELECTED_CHATITEM':\n      return { ...state, selectedChatItem: action.payload }\n    case 'REINITIALIZE_CLIENT':\n      return { ...state, selectedChatItem: 0 }\n    case 'RESET_SELECTED_CHATITEM':\n      return { ...state, selectedChatItem: 0 }\n    default:\n      return state\n  }\n\n}\n\nexport default SideBarReducer;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/WelcomeBody/WelcomeBody.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Profile/Profile.js",["281"],"import React from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './Profile.scss';\n\nimport MainNav from '../MainNav/MainNavContainer';\nimport FriendItem from '../FriendItem/FriendItemContainer';\nimport NotificationItem from '../NotificationItem/NotificationItemContainer';\nimport GroupItem from '../GroupItem/GroupItem';\n\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayData: {}\n    }\n  }\n\n  componentWillMount() {\n    console.log(this.props);\n    fetch(`${window.location.protocol}//${window.location.host}/api/search/getAccountData/${this.props.match.params.id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: this.props.AccountDetails.acc_data._id\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ displayData: data });\n      })\n  }\n\n  componentDidUpdate() {\n    console.log(this.props);\n    fetch(`${window.location.protocol}//${window.location.host}/api/search/getAccountData/${this.props.match.params.id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: this.props.AccountDetails.acc_data._id\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (this.state.displayData._id !== data._id) {\n          this.setState({ displayData: data });\n        }\n      })\n  }\n\n  render() {\n    console.log('PROFILE RENDER');\n    if (!this.props.AccountDetails.loggedOn) {\n      return (\n        <h1>\n          Not authenticated Please Login Again\n        </h1>\n      )\n    }\n    return (\n      <div className=\"wrapper_profile\">\n        <MainNav\n          clientId={this.props.clientId}\n          setClientIdWrapper={this.props.setClientIdWrapper}\n        />\n\n        <div key={uuidv4()} className=\"profile\">\n          <div className=\"profile-header\">\n            <div\n              className=\"profile-header-img\"\n              style={{ background: `#${this.state.displayData.acc_theme}` }}\n            >\n              <h1>\n                {this.state.displayData.acc_usrname ?\n                  this.state.displayData.acc_usrname.charAt(0)\n                  :\n                  ''}\n              </h1>\n            </div>\n            <div className=\"profile-header-details\">\n              <h1>\n                {this.state.displayData.acc_usrname}\n              </h1>\n              <p>{this.state.displayData.acc_gender} | {new Date().getFullYear() - new Date(this.state.displayData.acc_dob).getFullYear()}</p>\n            </div>\n          </div>\n          <hr />\n          <div className=\"profile-body\">\n            <div className=\"profile-body-bio\">\n              <h3>\n                Biography:\n              </h3>\n              <p>\n                {this.state.displayData.acc_bio}\n              </p>\n            </div>\n            <hr />\n            <div className=\"profile-body-relations\">\n              <div className=\"profile-body-relations_friends\">\n                <h3>Friends</h3>\n                <div className=\"profile-body-relations_friends_section\">\n                  {\n                    this.state.displayData.acc_friends\n                      ?\n                      this.state.displayData.acc_friends.map((accountItem) => (\n\n                        accountItem.frStatus == 'R_SENT'\n                          ?\n                          <NotificationItem\n                            key={uuidv4()}\n                            senderId={accountItem._id}\n                            notificationTitle={accountItem.acc_usrname}\n                            notificationLabel=\"Friend Request\"\n                            notificationType={'FRIEND_REQUEST'}\n                          />\n                          :\n                          <FriendItem\n                            key={uuidv4()}\n                            acc_id={accountItem._id}\n                            friendStatus={accountItem.frStatus}\n                            userName={accountItem.acc_usrname}\n                            fname={accountItem.acc_fname}\n                            lname={accountItem.acc_lname}\n                            searchData={accountItem}\n                          />\n\n                      )\n                      )\n                      :\n                      null\n                  }\n                </div>\n                {/* Spit out components for friends here! (FriendItem?) */}\n              </div>\n              <div className=\"profile-body-relations_groups\">\n                <h3>Groups</h3>\n                <div className=\"profile-body-relations_groups_section\">\n                  {/*  */}\n                  {\n                    this.state.displayData.acc_grps\n                      ?\n                      this.state.displayData.acc_grps.map((grp) => (\n                        <GroupItem g_title={grp.g_title} g_type={grp.g_type} g_size={grp.g_members.length} />\n                      ))\n                      :\n                      null\n                  }\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Profile);","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Profile/ProfileContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/GroupItem/GroupItem.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/_shared/actions/UpdateLogStateAction.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/_shared/actions/ReInitializeStoreAction.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/AppContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/TypingPopup/TypingPopupContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/TypingPopup/TypingPopup.js",["282","283","284","285"],"import { useState } from 'react';\n\nimport './TypingPopup.scss';\n\nfunction TypingPopup({ AccountDetails, SideBarDetails, TypingPopupDetails }) {\n\n  let client_grps = AccountDetails.acc_data.acc_grps;\n  let selectedGroupIdx = SideBarDetails.selectedChatItem - 1;\n  let selectedGrpId = client_grps[selectedGroupIdx]._id;\n\n  let typingClients = TypingPopupDetails.typingClients;\n  let viewedTypingClients = []\n  typingClients.map((typingClient) => {\n    if (typingClient.g_id == selectedGrpId && typingClient.acc_id !== AccountDetails.acc_data._id) {\n      viewedTypingClients.push(typingClient);\n    }\n  })\n\n\n  const mapUsersToView = (typingClients) => {\n    let dispStr = '', maxIdx = 0;\n    typingClients.map((user, idx) => {\n      if (idx <= 2) {\n        if (idx < typingClients.length - 1) { dispStr += `${user.emitter}, `; }\n        else { dispStr += `${user.emitter} `; }\n      }\n      maxIdx = idx;\n    })\n    if (maxIdx === 0) {\n      dispStr += 'is typing...';\n    }\n    else if (maxIdx >= 3) {\n      dispStr += `and ${maxIdx - 2} others are typing...`;\n    }\n    else {\n      dispStr += 'are typing...';\n    }\n    return dispStr;\n  }\n\n  return (\n    viewedTypingClients\n      ?\n      (viewedTypingClients.length > 0\n        ?\n        <div className=\"t_popup\" >\n          <span>{mapUsersToView(viewedTypingClients)}</span>\n        </div>\n        :\n        null)\n      :\n      null\n  )\n}\n\nexport default TypingPopup;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/TypingPopup/TypingPopupReducer.js",[],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":1,"column":40,"nodeType":"292","messageId":"293","endLine":1,"endColumn":47},{"ruleId":"290","severity":1,"message":"294","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"295","severity":1,"message":"296","line":37,"column":58,"nodeType":"297","messageId":"298","endLine":37,"endColumn":60},{"ruleId":"295","severity":1,"message":"296","line":38,"column":108,"nodeType":"297","messageId":"298","endLine":38,"endColumn":110},{"ruleId":"299","severity":1,"message":"300","line":171,"column":15,"nodeType":"301","endLine":171,"endColumn":94},{"ruleId":"290","severity":1,"message":"302","line":2,"column":47,"nodeType":"292","messageId":"293","endLine":2,"endColumn":52},{"ruleId":"303","severity":1,"message":"304","line":86,"column":32,"nodeType":"305","messageId":"306","endLine":86,"endColumn":34},{"ruleId":"307","severity":1,"message":"308","line":88,"column":15,"nodeType":"309","messageId":"310","endLine":98,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":36,"column":33,"nodeType":"297","messageId":"298","endLine":36,"endColumn":35},{"ruleId":"295","severity":1,"message":"296","line":54,"column":14,"nodeType":"297","messageId":"298","endLine":54,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":54,"column":49,"nodeType":"297","messageId":"298","endLine":54,"endColumn":51},{"ruleId":"295","severity":1,"message":"296","line":81,"column":61,"nodeType":"297","messageId":"298","endLine":81,"endColumn":63},{"ruleId":"290","severity":1,"message":"311","line":8,"column":66,"nodeType":"292","messageId":"293","endLine":8,"endColumn":87},{"ruleId":"299","severity":1,"message":"300","line":87,"column":35,"nodeType":"301","endLine":87,"endColumn":113},{"ruleId":"290","severity":1,"message":"312","line":5,"column":3,"nodeType":"292","messageId":"293","endLine":5,"endColumn":9},{"ruleId":"290","severity":1,"message":"313","line":8,"column":3,"nodeType":"292","messageId":"293","endLine":8,"endColumn":12},{"ruleId":"290","severity":1,"message":"314","line":9,"column":3,"nodeType":"292","messageId":"293","endLine":9,"endColumn":14},{"ruleId":"295","severity":1,"message":"296","line":65,"column":18,"nodeType":"297","messageId":"298","endLine":65,"endColumn":20},{"ruleId":"295","severity":1,"message":"296","line":105,"column":28,"nodeType":"297","messageId":"298","endLine":105,"endColumn":30},{"ruleId":"290","severity":1,"message":"294","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"290","severity":1,"message":"294","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"295","severity":1,"message":"296","line":23,"column":20,"nodeType":"297","messageId":"298","endLine":23,"endColumn":22},{"ruleId":"295","severity":1,"message":"296","line":27,"column":23,"nodeType":"297","messageId":"298","endLine":27,"endColumn":25},{"ruleId":"295","severity":1,"message":"296","line":54,"column":19,"nodeType":"297","messageId":"298","endLine":54,"endColumn":21},{"ruleId":"295","severity":1,"message":"315","line":109,"column":37,"nodeType":"297","messageId":"298","endLine":109,"endColumn":39},{"ruleId":"295","severity":1,"message":"296","line":115,"column":42,"nodeType":"297","messageId":"298","endLine":115,"endColumn":44},{"ruleId":"295","severity":1,"message":"296","line":123,"column":42,"nodeType":"297","messageId":"298","endLine":123,"endColumn":44},{"ruleId":"295","severity":1,"message":"296","line":131,"column":40,"nodeType":"297","messageId":"298","endLine":131,"endColumn":42},{"ruleId":"290","severity":1,"message":"294","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"286","replacedBy":"316"},{"ruleId":"288","replacedBy":"317"},{"ruleId":"307","severity":1,"message":"308","line":9,"column":9,"nodeType":"309","messageId":"310","endLine":171,"endColumn":10},{"ruleId":"303","severity":1,"message":"304","line":78,"column":51,"nodeType":"305","messageId":"306","endLine":78,"endColumn":53},{"ruleId":"295","severity":1,"message":"296","line":79,"column":40,"nodeType":"297","messageId":"298","endLine":79,"endColumn":42},{"ruleId":"303","severity":1,"message":"304","line":124,"column":45,"nodeType":"305","messageId":"306","endLine":124,"endColumn":47},{"ruleId":"295","severity":1,"message":"296","line":125,"column":37,"nodeType":"297","messageId":"298","endLine":125,"endColumn":39},{"ruleId":"295","severity":1,"message":"296","line":60,"column":34,"nodeType":"297","messageId":"298","endLine":60,"endColumn":36},{"ruleId":"290","severity":1,"message":"318","line":1,"column":27,"nodeType":"292","messageId":"293","endLine":1,"endColumn":36},{"ruleId":"295","severity":1,"message":"296","line":68,"column":31,"nodeType":"297","messageId":"298","endLine":68,"endColumn":33},{"ruleId":"295","severity":1,"message":"296","line":76,"column":34,"nodeType":"297","messageId":"298","endLine":76,"endColumn":36},{"ruleId":"295","severity":1,"message":"296","line":83,"column":38,"nodeType":"297","messageId":"298","endLine":83,"endColumn":40},{"ruleId":"290","severity":1,"message":"319","line":7,"column":28,"nodeType":"292","messageId":"293","endLine":7,"endColumn":47},{"ruleId":"295","severity":1,"message":"296","line":32,"column":25,"nodeType":"297","messageId":"298","endLine":32,"endColumn":27},{"ruleId":"290","severity":1,"message":"320","line":1,"column":8,"nodeType":"292","messageId":"293","endLine":1,"endColumn":15},{"ruleId":"295","severity":1,"message":"296","line":118,"column":46,"nodeType":"297","messageId":"298","endLine":118,"endColumn":48},{"ruleId":"290","severity":1,"message":"294","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":18},{"ruleId":"303","severity":1,"message":"304","line":13,"column":36,"nodeType":"305","messageId":"306","endLine":13,"endColumn":38},{"ruleId":"295","severity":1,"message":"296","line":14,"column":27,"nodeType":"297","messageId":"298","endLine":14,"endColumn":29},{"ruleId":"303","severity":1,"message":"304","line":22,"column":35,"nodeType":"305","messageId":"306","endLine":22,"endColumn":37},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Label' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'removeClientFromStore' is defined but never used.","'Button' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","Expected '!==' and instead saw '!='.",["321"],["322"],"'useEffect' is defined but never used.","'setNotificationType' is assigned a value but never used.","'SideBar' is defined but never used.","no-global-assign","no-unsafe-negation"]