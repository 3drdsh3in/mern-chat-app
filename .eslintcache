[{"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js":"1","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js":"2","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js":"3","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js":"4","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js":"5","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js":"6","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js":"7","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js":"8","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js":"9","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js":"10","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js":"11","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js":"12","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js":"13","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js":"14"},{"size":382,"mtime":1608198471089,"results":"15","hashOfConfig":"16"},{"size":481,"mtime":1608206114705,"results":"17","hashOfConfig":"16"},{"size":448,"mtime":1608284288025,"results":"18","hashOfConfig":"16"},{"size":234,"mtime":1608208094246,"results":"19","hashOfConfig":"16"},{"size":3662,"mtime":1608287178307,"results":"20","hashOfConfig":"16"},{"size":8156,"mtime":1608273763165,"results":"21","hashOfConfig":"16"},{"size":257,"mtime":1608207086050,"results":"22","hashOfConfig":"16"},{"size":391,"mtime":1608284089102,"results":"23","hashOfConfig":"16"},{"size":153,"mtime":1608267598009,"results":"24","hashOfConfig":"16"},{"size":338,"mtime":1608360864763,"results":"25","hashOfConfig":"16"},{"size":240,"mtime":1608284187584,"results":"26","hashOfConfig":"16"},{"size":262,"mtime":1608337092450,"results":"27","hashOfConfig":"16"},{"size":1728,"mtime":1608357776282,"results":"28","hashOfConfig":"16"},{"size":267,"mtime":1608363183277,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"7n2hzo",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js",[],["63","64"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js",["65"],"import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nconst middleware = [thunk];\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Configuration If NPM Package Isn't needed.\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js",["66","67","68"],"import React from 'react';\nimport './Login.scss';\nimport { Modal } from 'reactstrap';\n\n// Child Components:\nimport NewAccount from '../NewAccount/NewAccount';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from 'react-router';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Login\n      userName: \"\",\n      password: \"\",\n\n      // Modal\n      modal: false,\n      redirect: false\n    };\n    // SetOnChange (State Managing Callback)\n    this.setOnChange = this.setOnChange.bind(this);\n    // Login Request Handler\n    this.handleLogin = this.handleLogin.bind(this);\n    // Modal Trigger\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  handleLogin(event) {\n    // 1. Verify the account username exists (/w the corresponding password).\n    event.preventDefault();\n    fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.userName,\n        password: this.state.password\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(this);\n        console.log(data);\n        // If Unsuccesfful:\n        // Trigger Alert/Feedback\n        if ('code' in data) {\n          // Control FeedBack.\n        }\n        // If Succesful:\n        // Save account details to redux state.\n        // Redirect to Messaging Page.\n        else {\n          // Should be a single account stored onto Redux Store.\n          this.props.storeAccountDetails(data[0]);\n          // Redirect Page To Other Main Page Component.\n          this.setState({ redirect: true })\n        }\n      })\n  }\n\n  // Create Account Handlers\n  setOnChange(event) {\n    console.log(event.target.id);\n    let fieldID = event.target.id;\n    let obj = {};\n    obj[`${fieldID}`] = event.target.value;\n    this.setState(obj);\n    this.setState({\n      emailinvalid: false,\n      usrinvalid: false,\n      pwinvalid: false\n    })\n  }\n\n  // Handles Modal Triggering\n  toggleModal() {\n    console.log(!this.state.modal);\n    this.setState({ modal: !this.state.modal })\n  }\n\n  render() {\n    return (\n      <>\n        {/* Redirect Initiative */}\n        {this.state.redirect == true\n          ?\n          <Redirect to=\"/main\" />\n          :\n          null\n        }\n        <div className=\"wrapper fadeInDown\" onSubmit={this.handleLogin}>\n          <div id=\"formContent\">\n            <div className=\"wrapper-img fadeIn first\">\n              <img src=\"https://img.icons8.com/cute-clipart/256/000000/chat.png\" id=\"icon\" />\n            </div>\n\n            <form>\n              <input type=\"text\" id=\"userName\" className=\"fadeIn second\" name=\"userName\" placeholder=\"Username\" onChange={this.setOnChange} />\n              <input type=\"password\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"Password\" onChange={this.setOnChange} />\n              <input type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\" />\n            </form>\n\n            <div id=\"formFooter\">\n              <a className=\"underlineHover\" href=\"#\">Forgot Password?</a>\n            </div>\n            <div id=\"formFooter\">\n              <button className=\"createAccount fadeIn fifth\" onClick={this.toggleModal}>Create Account</button>\n              {/* newAccount Modal */}\n              <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n                <NewAccount />\n              </Modal>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Login;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js",["69","70","71"],"import React from 'react';\nimport { ModalHeader, ModalBody, ModalFooter, Label, Input, Form, FormGroup, FormFeedback } from 'reactstrap';\n\nclass NewAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // New Account\n      nafname: \"\",\n      nalname: \"\",\n      nausername: \"\",\n      naemailaddr: \"\",\n      napassword1: \"\",\n      napassword2: \"\",\n      nadobday: 1,\n      nadobmonth: 1,\n      nadobyear: (new Date()).getFullYear(),\n      nagender: \"N\",\n      usrinvalid: false,\n      emailinvalid: false,\n      pwinvalid: false,\n    }\n    // SetOnChange (State Managing Callback)\n    this.setOnChange = this.setOnChange.bind(this);\n    // Create Account Request Handler\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    // Modal Trigger\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  // Create Account Handlers\n  setOnChange(event) {\n    let fieldID = event.target.id;\n    let obj = {};\n    obj[`${fieldID}`] = event.target.value;\n    this.setState(obj);\n    this.setState({\n      emailinvalid: false,\n      usrinvalid: false,\n      pwinvalid: false\n    })\n  }\n\n  // Feedbback Togglers\n  invalidateEmailFeedback() {\n    console.log(!this.state.emailinvalid);\n    this.setState({ emailinvalid: true })\n  }\n  invalidateUserFeedback() {\n    console.log(!this.state.usrinvalid);\n    this.setState({ usrinvalid: true })\n  }\n  invalidatePasswordFeedback() {\n    console.log(!this.state.pwinvalid);\n    this.setState({ pwinvalid: true })\n  }\n\n  handleNewAccount(event) {\n    // Check #1: Check if passwords match:\n    // Check #2 Check if username is being used already:\n    // Check #3 Check if email is being used already:\n    fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/newaccount`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        nafname: this.state.nafname,\n        nalname: this.state.nalname,\n        nausername: this.state.nausername,\n        naemailaddr: this.state.naemailaddr,\n        napassword1: this.state.napassword1,\n        napassword2: this.state.napassword2,\n        nadobday: this.state.nadobday,\n        nadobmonth: this.state.nadobmonth,\n        nadobyear: this.state.nadobyear,\n        nagender: this.state.nagender\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        // If 'data' is an array, then it has errors\n        if (Array.isArray(data)) {\n          // Handles error messages\n          data.map((item, idx) => {\n            if ('code' in item) {\n              switch (item.code) {\n                case \"EMAIL_REGISTERED\":\n                  this.invalidateEmailFeedback();\n                  break;\n                case \"USERNAME_REGISTERED\":\n                  this.invalidateUserFeedback();\n                  break;\n                case \"PASSWORD_MISMATCH\":\n                  this.invalidatePasswordFeedback();\n                  break;\n              }\n            }\n          })\n          // If 'data' is an object, then it has no errors\n        } else {\n          // Close Modal (Probably Trigger an alert or something asw to tell the user they signed up!)\n          this.toggleModal();\n        }\n      })\n  }\n  \n  // Handles Modal Triggering\n  toggleModal() {\n    console.log(!this.state.modal);\n    this.setState({ modal: !this.state.modal })\n  }\n\n\n  render() {\n    let days = [];\n    let months = [];\n    let years = [];\n    for (let i = 1; i <= 31; i++) { days.push(i); }\n    for (let i = 1; i <= 12; i++) { months.push(i); }\n    for (let i = 1900; i <= (new Date()).getFullYear(); i++) { years.push(i); }\n    return (\n      <>\n        <ModalHeader toggle={this.toggleModal}><h3>Sign Up</h3></ModalHeader>\n        <ModalBody>\n\n          <Form className=\"createAccount-form container\">\n            <FormGroup className=\"createAccount-form-name\">\n              {/* Name Fields */}\n              <Input type=\"text\" id=\"nafname\" name=\"nafname\" placeholder=\"First Name\" onChange={this.setOnChange} />\n              <Input type=\"text\" id=\"nalname\" name=\"nalname\" placeholder=\"Last Name\" onChange={this.setOnChange} />\n            </FormGroup>\n            {/* Email Field */}\n            <FormGroup className=\"createAccount-form-email\">\n              {\n                this.state.emailinvalid\n                  ?\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} invalid />\n                  :\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Emails is taken</FormFeedback>\n            </FormGroup>\n            {/* Username Field */}\n            <FormGroup className=\"createAccount-form-username\">\n              {\n                this.state.usrinvalid ?\n                  <Input invalid type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n                  :\n                  <Input type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Username is taken</FormFeedback>\n            </FormGroup>\n            {/* Password Fields */}\n            <FormGroup className=\"createAccount-form-password\">\n              {this.state.pwinvalid ?\n                <>\n                  <Input invalid type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input invalid type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n                :\n                <>\n                  <Input type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n              }\n              <FormFeedback invalid>You will not be able to see this</FormFeedback>\n            </FormGroup>\n            <FormGroup className=\"createAccount-form-dob\">\n              <div className=\"createAccount-form-dob-label\">\n                <h6>Date Of Birth:</h6>\n              </div>\n              {/* Date Of Birth Selectors: */}\n              <select onChange={this.setOnChange} name=\"nadobday\" id=\"nadobday\" className=\"dob-day\" value={this.state.nadobday}>\n                {days.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobmonth\" id=\"nadobmonth\" className=\"dob-month\" value={this.state.nadobmonth}>\n                {months.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobyear\" id=\"nadobyear\" className=\"dob-year\" value={this.state.nadobyear}>\n                {years.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n            </FormGroup>\n            {/* Gender Selector: */}\n            <FormGroup>\n              <div className=\"createAccount-form-gender-label\">\n                <h6>Gender:</h6>\n              </div>\n              <select onChange={this.setOnChange} name=\"nagender\" id=\"nagender\" className=\"createAccount-form-gender\">\n                <option value=\"N\">---Choose A Gender Option---</option>\n                <option value=\"M\">Male</option>\n                <option value=\"F\">Female</option>\n              </select>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"signUp\" onClick={this.handleNewAccount}>Create Account</button>\n          {/* Adds Space: {' '} */}\n        </ModalFooter>\n      </>\n    )\n  }\n}\n\nexport default NewAccount;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js",["72"],"const INCREMENT = 'counter/increment'\n\nfunction LoginActions(data) {\n  return {\n    type: 'LOGIN',\n    payload: data,\n  }\n}\n\nexport default LoginActions;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js",["73"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js",["74"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js",["75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":40,"nodeType":"82","messageId":"83","endLine":1,"endColumn":47},{"ruleId":"84","severity":1,"message":"85","line":90,"column":30,"nodeType":"86","messageId":"87","endLine":90,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":99,"column":15,"nodeType":"90","endLine":99,"endColumn":94},{"ruleId":"91","severity":1,"message":"92","line":109,"column":15,"nodeType":"90","endLine":109,"endColumn":54},{"ruleId":"80","severity":1,"message":"93","line":2,"column":47,"nodeType":"82","messageId":"83","endLine":2,"endColumn":52},{"ruleId":"94","severity":1,"message":"95","line":87,"column":32,"nodeType":"96","messageId":"97","endLine":87,"endColumn":34},{"ruleId":"98","severity":1,"message":"99","line":89,"column":15,"nodeType":"100","messageId":"101","endLine":99,"endColumn":16},{"ruleId":"80","severity":1,"message":"102","line":1,"column":7,"nodeType":"82","messageId":"83","endLine":1,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":8,"column":3,"nodeType":"105","messageId":"106","endLine":10,"endColumn":4},{"ruleId":"88","severity":1,"message":"89","line":36,"column":35,"nodeType":"90","endLine":36,"endColumn":113},{"ruleId":"103","severity":1,"message":"104","line":4,"column":3,"nodeType":"105","messageId":"106","endLine":6,"endColumn":4},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Label' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'INCREMENT' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]