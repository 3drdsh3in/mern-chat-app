[{"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js":"1","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js":"2","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js":"3","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js":"4","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js":"5","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js":"6","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js":"7","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js":"8","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js":"9","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js":"10","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js":"11","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js":"12","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js":"13","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js":"14","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js":"15","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js":"16","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js":"17","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js":"18","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js":"19","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js":"20","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js":"21","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js":"22","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js":"23","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js":"24","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js":"25","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js":"26","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js":"27","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js":"28","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js":"29","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js":"30","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js":"31","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemContainer.js":"32","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemActions.js":"33","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-error-reducer.js":"34","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItem.js":"35","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemContainer.js":"36","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemActions.js":"37","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavActions.js":"38","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroup.js":"39","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupContainer.js":"40","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupActions.js":"41","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarReducer.js":"42","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/WelcomeBody/WelcomeBody.js":"43","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderActions.js":"44"},{"size":382,"mtime":1608593124073,"results":"45","hashOfConfig":"46"},{"size":571,"mtime":1609235894533,"results":"47","hashOfConfig":"46"},{"size":448,"mtime":1608284288025,"results":"48","hashOfConfig":"46"},{"size":435,"mtime":1609650473863,"results":"49","hashOfConfig":"46"},{"size":5994,"mtime":1609902740589,"results":"50","hashOfConfig":"46"},{"size":8029,"mtime":1609902796116,"results":"51","hashOfConfig":"46"},{"size":785,"mtime":1609841712804,"results":"52","hashOfConfig":"46"},{"size":494,"mtime":1609841827416,"results":"53","hashOfConfig":"46"},{"size":245,"mtime":1609841807518,"results":"54","hashOfConfig":"46"},{"size":2780,"mtime":1609895381863,"results":"55","hashOfConfig":"46"},{"size":494,"mtime":1609844635778,"results":"56","hashOfConfig":"46"},{"size":458,"mtime":1609371110775,"results":"57","hashOfConfig":"46"},{"size":4482,"mtime":1609902654756,"results":"58","hashOfConfig":"46"},{"size":4098,"mtime":1609902830288,"results":"59","hashOfConfig":"46"},{"size":1162,"mtime":1609630625015,"results":"60","hashOfConfig":"46"},{"size":499,"mtime":1609628437061,"results":"61","hashOfConfig":"46"},{"size":451,"mtime":1609818162049,"results":"62","hashOfConfig":"46"},{"size":873,"mtime":1609818496536,"results":"63","hashOfConfig":"46"},{"size":405,"mtime":1609651970792,"results":"64","hashOfConfig":"46"},{"size":3016,"mtime":1609898544569,"results":"65","hashOfConfig":"46"},{"size":232,"mtime":1608442202017,"results":"66","hashOfConfig":"46"},{"size":973,"mtime":1609803297845,"results":"67","hashOfConfig":"46"},{"size":687,"mtime":1609898372095,"results":"68","hashOfConfig":"46"},{"size":284,"mtime":1608636198762,"results":"69","hashOfConfig":"46"},{"size":0,"mtime":1608636264966,"results":"70","hashOfConfig":"46"},{"size":342,"mtime":1609631890922,"results":"71","hashOfConfig":"46"},{"size":6674,"mtime":1609898926901,"results":"72","hashOfConfig":"46"},{"size":178,"mtime":1608851859442,"results":"73","hashOfConfig":"46"},{"size":302,"mtime":1608883499567,"results":"74","hashOfConfig":"46"},{"size":2659,"mtime":1609902751021,"results":"75","hashOfConfig":"46"},{"size":2453,"mtime":1609902889639,"results":"76","hashOfConfig":"46"},{"size":568,"mtime":1609483905035,"results":"77","hashOfConfig":"46"},{"size":479,"mtime":1609483935080,"results":"78","hashOfConfig":"46"},{"size":406,"mtime":1609233519131,"results":"79","hashOfConfig":"46"},{"size":1672,"mtime":1609482614517,"results":"80","hashOfConfig":"46"},{"size":740,"mtime":1609482511630,"results":"81","hashOfConfig":"46"},{"size":1167,"mtime":1609482497006,"results":"82","hashOfConfig":"46"},{"size":225,"mtime":1609371444184,"results":"83","hashOfConfig":"46"},{"size":2823,"mtime":1609892159962,"results":"84","hashOfConfig":"46"},{"size":399,"mtime":1609455837880,"results":"85","hashOfConfig":"46"},{"size":160,"mtime":1609676565181,"results":"86","hashOfConfig":"46"},{"size":491,"mtime":1609819151034,"results":"87","hashOfConfig":"46"},{"size":781,"mtime":1609895611912,"results":"88","hashOfConfig":"46"},{"size":614,"mtime":1609819172096,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"7n2hzo",{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js",[],["189","190"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js",["191"],"import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\nimport createSocketMiddleware from './utils/socket-middleware';\n\nconst middleware = [thunk, createSocketMiddleware()];\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Configuration If NPM Package Isn't needed.\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js",["192","193"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js",["194","195","196"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js",["197"],"import React from 'react';\n\n// Containers:\nimport MainNav from '../MainNav/MainNavContainer';\nimport SideBar from '../SideBar/SideBarContainer';\nimport ChatHeader from '../ChatHeader/ChatHeaderContainer';\nimport ChatBody from '../ChatBody/ChatBodyContainer';\nimport WelcomeBody from '../WelcomeBody/WelcomeBody';\n\nimport './Main.scss';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticated: true\n    }\n  }\n\n  componentWillMount() {\n    // Ideally change this to a check whether sesh_id hasn't expired.\n    if (Object.keys(this.props.AccountDetails.acc_data).length === 0) {\n      // COMMENT OUT FOR UI DEVELOPMENT:\n      this.setState({ authenticated: false });\n    } else {\n      // Emit AccountDetails to emit in the socket middleware client.\n      this.props.emitAccountDetails(this.props.AccountDetails);\n    }\n  }\n\n  render() {\n    let grps = this.props.AccountDetails.acc_data.acc_grps;\n    let selectedChatGrpIdx = this.props.SideBarDetails.selectedChatItem;\n    let viewedGrp = grps[selectedChatGrpIdx - 1];\n    let acc_id = this.props.AccountDetails.acc_data._id;\n    return (\n      this.state.authenticated\n        ?\n        this.props.SocketErrorDetails.errorMessage.name !== 'TokenExpiredError'\n          ?\n          <>\n            <div className=\"main\">\n              <div className=\"main-header\">\n                <MainNav />\n              </div>\n              <div className=\"main-body\">\n                <div className=\"main-body-side\">\n                  <SideBar />\n                </div>\n\n                {this.props.SideBarDetails.selectedChatItem == 0\n                  ?\n                  <div key={uuidv4()} className=\"main-body-content\">\n                    <WelcomeBody accountDetails={this.props.AccountDetails} />\n                  </div>\n                  :\n                  <div key={uuidv4()} className=\"main-body-content\">\n                    <ChatHeader acc_id={acc_id} viewedGrp={viewedGrp} chatName={viewedGrp.g_title} chatType={viewedGrp.g_type} />\n                    <ChatBody viewedGrp={viewedGrp} />\n                  </div>\n                }\n              </div>\n            </div>\n          </>\n          :\n          <>\n            <h1>\n              {`Error Name: ${this.props.SocketErrorDetails.errorMessage.name}`}\n            </h1>\n            <p>\n              {`Error Message: ${this.props.SocketErrorDetails.errorMessage.message}`}\n            </p>\n            <p>\n              {`Expired At: ${Date(this.props.SocketErrorDetails.errorMessage.expiredAt)}`}\n            </p>\n          </>\n        :\n        <>\n          <h1>\n            Not authenticated Please Login Again\n        </h1>\n        </>\n    )\n  }\n}\n\nexport default Main;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js",["198"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js",["199","200","201","202","203"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js",["204"],"import React, { useState } from 'react';\n\nimport './ChatItem.scss';\n\n\nclass ChatItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatName: props.userId,\n      chatMsg: props.userMsg,\n      isSelected: props.isSelected\n    }\n  }\n  // Initial State: Most Recent Message On The Database Via an HTTP request.\n  // Consequent Rerenders: New Dynamic Messages sent to this specific chat \n  // (Requires socket endpoints to emit the corresponding data from the client)\n  // const [chatName, setChatName] = useState(props.userId);\n  // const [chatMsg, setChatMsg] = useState(props.userMsg);\n  // const [isSelected, setSelectedState] = useState(props.isSelected);\n  // console.log(props);\n  render() {\n    return (\n      this.state.isSelected\n        ?\n        // Selected Render\n        <div className=\"chatitem selected\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n        :\n        // Not Selected Render\n        <div className=\"chatitem\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n    )\n  }\n}\nexport default ChatItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js",["205","206","207"],"import React, { useState } from 'react';\n\nimport './ChatHeader.scss';\n\nfunction ChatHeader({ chatName, chatType, viewedGrp, leaveGroup, leaveGroupStore, acc_id }) {\n\n  const handleLeaveGroup = () => {\n    leaveGroupStore({\n      g_id: viewedGrp._id,\n    })\n    leaveGroup({\n      g_id: viewedGrp._id,\n      acc_id: acc_id\n    });\n  }\n\n  return (\n    <>\n      <div className=\"chat-header\">\n        <h5>{chatName}</h5>\n        {\n          // 'FRIENDS IS NOT IMPLEMENTED YET, SO FORGET ABOUT IT!'\n          chatType == 'FRIENDS'\n            ?\n            <button>Friends <i className=\"fas fa-check\"></i></button>\n            :\n            (chatType == 'GROUP'\n              ?\n              <button onClick={handleLeaveGroup}>In Group <i className=\"fas fa-check\"></i></button>\n              :\n              null)\n        }\n      </div>\n    </>\n  )\n}\n\nexport default ChatHeader;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js",["208","209","210","211","212"],"import React from 'react';\n\nimport './ChatBody.scss';\n\n// Containers:\nimport Message from '../Message/MessageContainer';\n\nclass ChatBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messageInput: ''\n    }\n    this.messagesEndRef = React.createRef();\n    this.submitMessageInput = this.submitMessageInput.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount() {\n    this.scrollToBottom()\n  }\n  componentDidUpdate() {\n    this.scrollToBottom()\n  }\n\n  submitMessageInput() {\n    console.log(this.state.messageInput);\n    if (this.state.messageInput !== '') {\n      this.props.sendNewMessage({\n        g_id: this.props.viewedGrp._id,\n        msg_string: this.state.messageInput\n      });\n    }\n  }\n\n  // Scrolls page to bottom (ngl, idk what is really happening here)\n  scrollToBottom = () => {\n    this.messagesEndRef.current.scrollIntoView({ behavior: 'auto' })\n  }\n\n  handleKeyPress(event) {\n    if (event.key == 'Enter') {\n      this.submitMessageInput();\n    }\n  }\n\n  render() {\n    let clientId = this.props.AccountDetails.acc_data._id;\n    let displayMessages = this.props.viewedGrp.g_messages;\n    return (\n      <div className=\"chatbody\">\n        <div className=\"chatbody-messages\">\n          {\n            displayMessages.map((msg, idx, elements) => {\n              return (\n                !(idx + 1 >= elements.length)\n                  ?\n                  (msg.m_sender._id != elements[idx + 1].m_sender._id\n                    ?\n                    // Last message in a row by a specific user.\n                    <Message\n                      senderName={msg.m_sender.acc_usrname}\n                      msgString={msg.msg_string}\n                      isSender={clientId == msg.m_sender._id}\n                      marginBottom={true}\n                    />\n                    :\n                    <Message\n                      senderName={msg.m_sender.acc_usrname}\n                      msgString={msg.msg_string}\n                      isSender={clientId == msg.m_sender._id}\n                      marginBottom={false}\n                    />)\n                  :\n                  <Message\n                    senderName={msg.m_sender.acc_usrname}\n                    msgString={msg.msg_string}\n                    isSender={clientId == msg.m_sender._id}\n                    marginBottom={false}\n                  />\n              )\n            })\n          }\n          <div ref={this.messagesEndRef} />\n        </div>\n        <div className=\"chatbody-form\">\n          <hr />\n          <div className=\"chatbody-form-textbox\">\n            <input onKeyPress={this.handleKeyPress} onChange={(e) => { this.setState({ messageInput: e.target.value }) }} type=\"text\" placeholder=\"Say something...\" />\n            <button onClick={this.submitMessageInput}>\n              <i className=\"fas fa-caret-right fa-3x\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ChatBody;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js",["213"],"import React, { useState } from 'react';\n\nimport './Message.scss';\n\nfunction Message({ senderName, msgString, isSender, marginBottom, messageSpan }) {\n\n  return (\n    isSender\n      ?\n      // Sender:\n      (\n        marginBottom\n          ?\n          <div className=\"message sender margin-bottom\">\n            <p>{msgString}</p>\n          </div>\n          :\n          <div className=\"message sender\">\n            <p>{msgString}</p>\n          </div>\n      )\n      :\n      (// Others User Messages:\n        marginBottom\n          ?\n          <>\n            <span className=\"message-span\">{senderName}</span>\n            <div className=\"message reciever margin-bottom\">\n              <p>{msgString}</p>\n            </div>\n          </>\n          :\n          <>\n            <span className=\"message-span\">{senderName}</span>\n            <div className=\"message reciever\">\n              <p>{msgString}</p>\n            </div>\n          </>\n      )\n  )\n}\n\nexport default Message;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js",[],["214","215"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js",["216","217","218","219","220"],"import io from 'socket.io-client';\n\n// Invoke this function to return the corresponding socket-middleware.\nconst createSocketMiddleware = () => {\n    let socket;\n    // Socket Middleware\n    // storeAPI has 'getState' and 'dispatch' as it's fields here.\n    // (Could also use ({dispatch, getState}) in place of 'storeAPI' here)\n    return storeAPI => next => action => {\n        switch (action.type) {\n            // Must dispatch 'LOGIN' action to instantiate socket endpoint.\n            case \"LOGIN\": {\n                // Connect with server.\n                socket = io();\n                /*\n                START: Server => Client Endpoints:\n                */\n                socket.on(\"NEW_FRIEND_REQUEST\", (message) => {\n                    let state = storeAPI.getState();\n                    // Modify acc_data the way the server intends:\n                    let acc_data = state.AccountDetails.acc_data;\n                    acc_data.acc_freqs.push(message.message);\n                    // Dispatch to update Redux Store.\n                    storeAPI.dispatch({\n                        // May need to check whether it is a new:\n                        // 1. Message\n                        // 2. Group\n                        // 3. Friend\n                        // (So I'm suspecting an extra field may be required)\n                        type: message.messageType,\n                        payload: acc_data\n                    });\n                });\n\n                socket.on(\"DELETE_FRIEND_REQUEST\", (message) => {\n                    let state = storeAPI.getState();\n                    // Modify acc_data the way the server intends:\n                    let acc_data = state.AccountDetails.acc_data;\n                    acc_data.acc_freqs.splice(acc_data.acc_freqs.indexOf(message.message), 1);\n                    // Dispatch to update Redux Store.\n                    storeAPI.dispatch({\n                        // May need to check whether it is a new:\n                        // 1. Message\n                        // 2. Group\n                        // 3. Friend\n                        // (So I'm suspecting an extra field may be required)\n                        type: message.messageType,\n                        payload: acc_data\n                    });\n                });\n\n                socket.on(\"FR_ACCEPT\", (message) => {\n                    let state = storeAPI.getState();\n                    let acc_data = state.AccountDetails.acc_data;\n                    acc_data.acc_friends.push(message.message.fr_reciever_id);\n                    console.log(message);\n                    console.log(acc_data);\n\n                    storeAPI.dispatch({\n                        type: message.messageType,\n                        payload: acc_data\n                    })\n                })\n\n                socket.on(\"DELETE_FRIEND\", (message) => {\n                    let { AccountDetails } = storeAPI.getState();\n                    // Modify for data needs:\n                    let acc_friends = AccountDetails.acc_data.acc_friends;\n                    let removeIdx = null;\n                    acc_friends.map((friend, idx) => {\n                        if (friend._id == message.message) {\n                            removeIdx = idx;\n                        }\n                    })\n                    if (!null) {\n                        acc_friends.splice(removeIdx, 1);\n                    }\n                    AccountDetails.acc_data.acc_friends = acc_friends;\n\n                    storeAPI.dispatch({\n                        type: 'UPDATE_ACCOUNT_DETAILS',\n                        payload: AccountDetails.acc_data\n                    })\n                })\n\n                // Chat Groups:\n\n                socket.on(\"NEW_GROUP\", (message) => {\n                    console.log('NEW GROUP:', message);\n                    let { AccountDetails } = storeAPI.getState();\n                    let acc_grps = AccountDetails.acc_data.acc_grps;\n                    acc_grps.push(message.message);\n                    AccountDetails.acc_data._acc_grps = acc_grps;\n                    storeAPI.dispatch({\n                        type: 'UPDATE_ACCOUNT_DETAILS',\n                        payload: AccountDetails.acc_data\n                    })\n                })\n\n                socket.on(\"NEW_MESSAGE\", (message) => {\n                    let { AccountDetails } = storeAPI.getState();\n                    let acc_grps = AccountDetails.acc_data.acc_grps;\n                    acc_grps.map((grp, idx) => {\n                        if (grp._id == message.message.g_id) {\n                            grp.g_messages.push(message.message);\n                        }\n                    })\n                    // console.log(acc_grps);\n                    AccountDetails.acc_data.acc_grps = acc_grps;\n                    storeAPI.dispatch({\n                        type: 'UPDATE_ACCOUNT_DETAILS',\n                        payload: AccountDetails.acc_data\n                    })\n                })\n\n                /*\n                END: Server => Client Endpoints\n                */\n\n                // Server => Client Endpoint for handling server errors.\n                socket.on(\"ERROR_MESSAGE\", (err_message) => {\n                    storeAPI.dispatch({\n                        type: \"SOCKET_ERROR_RECEIVED\",\n                        payload: err_message\n                    });\n                });\n\n                // Client connectivity ends:\n                socket.on('disconnect', () => {\n                    console.log('disconnected');\n                })\n                socket.on('reconnect', () => {\n                    console.log('reconnected');\n                })\n                break;\n            }\n            // Action to Logout:\n            case 'REINITIALIZE_CLIENT': {\n                socket.disconnect();\n                // Move onto the next middleware or reducer to update state.\n                return next(action);\n            }\n            // This endpoint can only be reached once LOGIN action is dispatched\n            // to initialise the socket endpoint on the redux client.\n            case 'SEND_WEBSOCKET_MESSAGE': {\n                let { AccountDetails } = storeAPI.getState();\n                socket.emit('JWT_AUTH', AccountDetails.token_data);\n                socket.off('JWT_AUTH_SUCCESS');\n                socket.on('JWT_AUTH_SUCCESS', () => {\n                    socket.emit(action.eventName, action.payload);\n                })\n                // Do not move onto any further reducer actions.\n                return;\n            }\n        }\n\n        return next(action);\n    }\n}\n\n\nexport default createSocketMiddleware;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js",["221"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js",["222","223","224","225"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-error-reducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItem.js",["226","227"],"import React, { useState } from 'react';\n\nimport './NotificationItem.scss';\n\nfunction NotificationItem(props) {\n\n  const [notificationType, setNotificationType] = useState(props.notificationType);\n\n  const acceptFriendRequest = () => {\n    // Update the accepting user's redux store to correspond with the the database.\n    props.addFriendToStore(props.senderData);\n    props.acceptFriendRequest({\n      reciever_id: props.AccountDetails.acc_data._id,\n      sender_id: props.senderId\n    });\n    props.removeFriendReqFromStore({\n      sender_id: props.senderId\n    });\n  }\n  const rejectFriendRequest = () => {\n    props.rejectFriendRequest({\n      reciever_id: props.AccountDetails.acc_data._id,\n      sender_id: props.senderId\n    });\n    props.removeFriendReqFromStore({\n      sender_id: props.senderId\n    });\n  }\n\n  return (\n    <>\n      {notificationType == 'FRIEND_REQUEST'\n        ?\n        <div className=\"notification-item\">\n          <div className=\"notification-item-header\">\n            <h6>{props.notificationTitle}</h6>\n            <p>{props.notificationLabel}</p>\n          </div>\n          <div className=\"notification-item-icons\">\n            {/* Accept Friend Request */}\n            <button onClick={acceptFriendRequest} className=\"notification-item-icons-item\">\n              <i className=\"fas fa-check-circle\"></i>\n            </button>\n            {/* Delete Friend Request */}\n            <button onClick={rejectFriendRequest} className=\"notification-item-icons-item\">\n              <i className=\"fas fa-times-circle\"></i>\n            </button>\n          </div>\n        </div>\n        :\n        null}\n    </>\n  )\n}\n\nexport default NotificationItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroup.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarReducer.js",["228"],"import SideBar from \"./SideBar\"\n\nconst initialState = {\n  selectedChatItem: 0\n}\n\nfunction SideBarReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'UPDATE_SELECTED_CHATITEM':\n      return { ...state, selectedChatItem: action.payload }\n    case 'REINITIALIZE_CLIENT':\n      return { ...state, selectedChatItem: 0 }\n    case 'RESET_SELECTED_CHATITEM':\n      return { ...state, selectedChatItem: 0 }\n    default:\n      return state\n  }\n\n}\n\nexport default SideBarReducer;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/WelcomeBody/WelcomeBody.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderActions.js",[],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":1,"column":40,"nodeType":"235","messageId":"236","endLine":1,"endColumn":47},{"ruleId":"237","severity":1,"message":"238","line":155,"column":30,"nodeType":"239","messageId":"240","endLine":155,"endColumn":32},{"ruleId":"241","severity":1,"message":"242","line":164,"column":15,"nodeType":"243","endLine":164,"endColumn":94},{"ruleId":"233","severity":1,"message":"244","line":2,"column":47,"nodeType":"235","messageId":"236","endLine":2,"endColumn":52},{"ruleId":"245","severity":1,"message":"246","line":85,"column":32,"nodeType":"247","messageId":"248","endLine":85,"endColumn":34},{"ruleId":"249","severity":1,"message":"250","line":87,"column":15,"nodeType":"251","messageId":"252","endLine":97,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":53,"column":61,"nodeType":"239","messageId":"240","endLine":53,"endColumn":63},{"ruleId":"241","severity":1,"message":"242","line":70,"column":35,"nodeType":"243","endLine":70,"endColumn":113},{"ruleId":"233","severity":1,"message":"253","line":5,"column":3,"nodeType":"235","messageId":"236","endLine":5,"endColumn":9},{"ruleId":"233","severity":1,"message":"254","line":8,"column":3,"nodeType":"235","messageId":"236","endLine":8,"endColumn":12},{"ruleId":"233","severity":1,"message":"255","line":9,"column":3,"nodeType":"235","messageId":"236","endLine":9,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":65,"column":18,"nodeType":"239","messageId":"240","endLine":65,"endColumn":20},{"ruleId":"237","severity":1,"message":"238","line":105,"column":28,"nodeType":"239","messageId":"240","endLine":105,"endColumn":30},{"ruleId":"233","severity":1,"message":"256","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"256","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":23,"column":20,"nodeType":"239","messageId":"240","endLine":23,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":27,"column":23,"nodeType":"239","messageId":"240","endLine":27,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":42,"column":19,"nodeType":"239","messageId":"240","endLine":42,"endColumn":21},{"ruleId":"237","severity":1,"message":"257","line":58,"column":37,"nodeType":"239","messageId":"240","endLine":58,"endColumn":39},{"ruleId":"237","severity":1,"message":"238","line":64,"column":42,"nodeType":"239","messageId":"240","endLine":64,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":71,"column":42,"nodeType":"239","messageId":"240","endLine":71,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":78,"column":40,"nodeType":"239","messageId":"240","endLine":78,"endColumn":42},{"ruleId":"233","severity":1,"message":"256","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"229","replacedBy":"258"},{"ruleId":"231","replacedBy":"259"},{"ruleId":"249","severity":1,"message":"250","line":10,"column":9,"nodeType":"251","messageId":"252","endLine":155,"endColumn":10},{"ruleId":"245","severity":1,"message":"246","line":70,"column":51,"nodeType":"247","messageId":"248","endLine":70,"endColumn":53},{"ruleId":"237","severity":1,"message":"238","line":71,"column":40,"nodeType":"239","messageId":"240","endLine":71,"endColumn":42},{"ruleId":"245","severity":1,"message":"246","line":103,"column":45,"nodeType":"247","messageId":"248","endLine":103,"endColumn":47},{"ruleId":"237","severity":1,"message":"238","line":104,"column":37,"nodeType":"239","messageId":"240","endLine":104,"endColumn":39},{"ruleId":"237","severity":1,"message":"238","line":60,"column":34,"nodeType":"239","messageId":"240","endLine":60,"endColumn":36},{"ruleId":"233","severity":1,"message":"260","line":1,"column":27,"nodeType":"235","messageId":"236","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":52,"column":31,"nodeType":"239","messageId":"240","endLine":52,"endColumn":33},{"ruleId":"237","severity":1,"message":"238","line":60,"column":34,"nodeType":"239","messageId":"240","endLine":60,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":67,"column":38,"nodeType":"239","messageId":"240","endLine":67,"endColumn":40},{"ruleId":"233","severity":1,"message":"261","line":7,"column":28,"nodeType":"235","messageId":"236","endLine":7,"endColumn":47},{"ruleId":"237","severity":1,"message":"238","line":32,"column":25,"nodeType":"239","messageId":"240","endLine":32,"endColumn":27},{"ruleId":"233","severity":1,"message":"262","line":1,"column":8,"nodeType":"235","messageId":"236","endLine":1,"endColumn":15},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Label' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Button' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'useState' is defined but never used.","Expected '!==' and instead saw '!='.",["263"],["264"],"'useEffect' is defined but never used.","'setNotificationType' is assigned a value but never used.","'SideBar' is defined but never used.","no-global-assign","no-unsafe-negation"]