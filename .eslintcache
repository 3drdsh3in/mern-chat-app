[{"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js":"1","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js":"2","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js":"3","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js":"4","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js":"5","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js":"6","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js":"7","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js":"8","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js":"9","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js":"10","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js":"11","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js":"12","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js":"13","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js":"14","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js":"15","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js":"16","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js":"17","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js":"18","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js":"19","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js":"20","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js":"21","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js":"22","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js":"23","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js":"24","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js":"25","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js":"26","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyReducer.js":"27","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js":"28","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js":"29","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js":"30","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js":"31","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js":"32","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemContainer.js":"33","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemActions.js":"34","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-error-reducer.js":"35","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItem.js":"36","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemContainer.js":"37","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemActions.js":"38","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavActions.js":"39","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroup.js":"40","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupContainer.js":"41","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupActions.js":"42"},{"size":382,"mtime":1608593124073,"results":"43","hashOfConfig":"44"},{"size":571,"mtime":1609235894533,"results":"45","hashOfConfig":"44"},{"size":448,"mtime":1608284288025,"results":"46","hashOfConfig":"44"},{"size":440,"mtime":1609462456420,"results":"47","hashOfConfig":"44"},{"size":3882,"mtime":1609210231059,"results":"48","hashOfConfig":"44"},{"size":8156,"mtime":1608273763165,"results":"49","hashOfConfig":"44"},{"size":683,"mtime":1609371947245,"results":"50","hashOfConfig":"44"},{"size":391,"mtime":1608284089102,"results":"51","hashOfConfig":"44"},{"size":114,"mtime":1608608595297,"results":"52","hashOfConfig":"44"},{"size":1649,"mtime":1608860924711,"results":"53","hashOfConfig":"44"},{"size":405,"mtime":1608852029507,"results":"54","hashOfConfig":"44"},{"size":458,"mtime":1609371110775,"results":"55","hashOfConfig":"44"},{"size":4195,"mtime":1609474504117,"results":"56","hashOfConfig":"44"},{"size":2652,"mtime":1609497340002,"results":"57","hashOfConfig":"44"},{"size":1160,"mtime":1608609940359,"results":"58","hashOfConfig":"44"},{"size":422,"mtime":1608636383126,"results":"59","hashOfConfig":"44"},{"size":257,"mtime":1608420859798,"results":"60","hashOfConfig":"44"},{"size":532,"mtime":1608690938433,"results":"61","hashOfConfig":"44"},{"size":245,"mtime":1608635735341,"results":"62","hashOfConfig":"44"},{"size":794,"mtime":1608690923809,"results":"63","hashOfConfig":"44"},{"size":232,"mtime":1608442202017,"results":"64","hashOfConfig":"44"},{"size":322,"mtime":1608592661900,"results":"65","hashOfConfig":"44"},{"size":522,"mtime":1608679373441,"results":"66","hashOfConfig":"44"},{"size":284,"mtime":1608636198762,"results":"67","hashOfConfig":"44"},{"size":0,"mtime":1608636264966,"results":"68","hashOfConfig":"44"},{"size":409,"mtime":1608636266901,"results":"69","hashOfConfig":"44"},{"size":550,"mtime":1609371961273,"results":"70","hashOfConfig":"44"},{"size":5073,"mtime":1609495754532,"results":"71","hashOfConfig":"44"},{"size":178,"mtime":1608851859442,"results":"72","hashOfConfig":"44"},{"size":302,"mtime":1608883499567,"results":"73","hashOfConfig":"44"},{"size":2859,"mtime":1609482738415,"results":"74","hashOfConfig":"44"},{"size":2454,"mtime":1609483911846,"results":"75","hashOfConfig":"44"},{"size":568,"mtime":1609483905035,"results":"76","hashOfConfig":"44"},{"size":479,"mtime":1609483935080,"results":"77","hashOfConfig":"44"},{"size":406,"mtime":1609233519131,"results":"78","hashOfConfig":"44"},{"size":1672,"mtime":1609482614517,"results":"79","hashOfConfig":"44"},{"size":740,"mtime":1609482511630,"results":"80","hashOfConfig":"44"},{"size":1167,"mtime":1609482497006,"results":"81","hashOfConfig":"44"},{"size":225,"mtime":1609371444184,"results":"82","hashOfConfig":"44"},{"size":2804,"mtime":1609461237194,"results":"83","hashOfConfig":"44"},{"size":399,"mtime":1609455837880,"results":"84","hashOfConfig":"44"},{"size":167,"mtime":1609456390649,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"7n2hzo",{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js",[],["181","182"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js",["183"],"import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\nimport createSocketMiddleware from './utils/socket-middleware';\n\nconst middleware = [thunk, createSocketMiddleware()];\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Configuration If NPM Package Isn't needed.\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js",["184","185","186"],"import React from 'react';\nimport './Login.scss';\nimport { Modal } from 'reactstrap';\n\n// Child Components:\nimport NewAccount from '../NewAccount/NewAccount';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from 'react-router';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Login\n      userName: \"\",\n      password: \"\",\n\n      // Modal\n      modal: false,\n      redirect: false\n    };\n    // SetOnChange (State Managing Callback)\n    this.setOnChange = this.setOnChange.bind(this);\n    // Login Request Handler\n    this.handleLogin = this.handleLogin.bind(this);\n    // Modal Trigger\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  /*\n  Future Refactors: handleLogin(event) should be done through TCP socket conenction\n  as opposed to a HTTP Post handler to reduce incoming server traffic.\n  */\n  handleLogin(event) {\n    // 1. Verify the account username exists (/w the corresponding password).\n    event.preventDefault();\n    fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.userName,\n        password: this.state.password\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(this);\n        console.log(data);\n        // If Unsuccesfful:\n        // Trigger Alert/Feedback\n        if ('code' in data) {\n          // Control FeedBack.\n        }\n        // If Succesful:\n        // Save account details to redux state.\n        // Redirect to Messaging Page.\n        else {\n          // Should be a single account stored onto Redux Store.\n          this.props.storeAccountDetails(data['account'][0]);\n          console.log(data['accessToken']);\n          // Redirect Page To Other Main Page Component.\n          this.setState({ redirect: true })\n        }\n      })\n  }\n\n  // Create Account Handlers\n  setOnChange(event) {\n    console.log(event.target.id);\n    let fieldID = event.target.id;\n    let obj = {};\n    obj[`${fieldID}`] = event.target.value;\n    this.setState(obj);\n    this.setState({\n      emailinvalid: false,\n      usrinvalid: false,\n      pwinvalid: false\n    })\n  }\n\n  // Handles Modal Triggering\n  toggleModal() {\n    console.log(!this.state.modal);\n    this.setState({ modal: !this.state.modal })\n  }\n\n  render() {\n    return (\n      <>\n        {/* Redirect Initiative */}\n        {this.state.redirect == true\n          ?\n          <Redirect to=\"/main\" />\n          :\n          null\n        }\n        <div className=\"wrapper fadeInDown\" onSubmit={this.handleLogin}>\n          <div id=\"formContent\">\n            <div className=\"wrapper-img fadeIn first\">\n              <img src=\"https://img.icons8.com/cute-clipart/256/000000/chat.png\" id=\"icon\" />\n            </div>\n\n            <form>\n              <input type=\"text\" id=\"userName\" className=\"fadeIn second\" name=\"userName\" placeholder=\"Username\" onChange={this.setOnChange} />\n              <input type=\"password\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"Password\" onChange={this.setOnChange} />\n              <input type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\" />\n            </form>\n\n            <div id=\"formFooter\">\n              <a className=\"underlineHover\" href=\"#\">Forgot Password?</a>\n            </div>\n            <div id=\"formFooter\">\n              <button className=\"createAccount fadeIn fifth\" onClick={this.toggleModal}>Create Account</button>\n              {/* newAccount Modal */}\n              <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n                <NewAccount />\n              </Modal>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Login;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js",["187","188","189"],"import React from 'react';\nimport { ModalHeader, ModalBody, ModalFooter, Label, Input, Form, FormGroup, FormFeedback } from 'reactstrap';\n\nclass NewAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // New Account\n      nafname: \"\",\n      nalname: \"\",\n      nausername: \"\",\n      naemailaddr: \"\",\n      napassword1: \"\",\n      napassword2: \"\",\n      nadobday: 1,\n      nadobmonth: 1,\n      nadobyear: (new Date()).getFullYear(),\n      nagender: \"N\",\n      usrinvalid: false,\n      emailinvalid: false,\n      pwinvalid: false,\n    }\n    // SetOnChange (State Managing Callback)\n    this.setOnChange = this.setOnChange.bind(this);\n    // Create Account Request Handler\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    // Modal Trigger\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  // Create Account Handlers\n  setOnChange(event) {\n    let fieldID = event.target.id;\n    let obj = {};\n    obj[`${fieldID}`] = event.target.value;\n    this.setState(obj);\n    this.setState({\n      emailinvalid: false,\n      usrinvalid: false,\n      pwinvalid: false\n    })\n  }\n\n  // Feedbback Togglers\n  invalidateEmailFeedback() {\n    console.log(!this.state.emailinvalid);\n    this.setState({ emailinvalid: true })\n  }\n  invalidateUserFeedback() {\n    console.log(!this.state.usrinvalid);\n    this.setState({ usrinvalid: true })\n  }\n  invalidatePasswordFeedback() {\n    console.log(!this.state.pwinvalid);\n    this.setState({ pwinvalid: true })\n  }\n\n  handleNewAccount(event) {\n    // Check #1: Check if passwords match:\n    // Check #2 Check if username is being used already:\n    // Check #3 Check if email is being used already:\n    fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/newaccount`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        nafname: this.state.nafname,\n        nalname: this.state.nalname,\n        nausername: this.state.nausername,\n        naemailaddr: this.state.naemailaddr,\n        napassword1: this.state.napassword1,\n        napassword2: this.state.napassword2,\n        nadobday: this.state.nadobday,\n        nadobmonth: this.state.nadobmonth,\n        nadobyear: this.state.nadobyear,\n        nagender: this.state.nagender\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        // If 'data' is an array, then it has errors\n        if (Array.isArray(data)) {\n          // Handles error messages\n          data.map((item, idx) => {\n            if ('code' in item) {\n              switch (item.code) {\n                case \"EMAIL_REGISTERED\":\n                  this.invalidateEmailFeedback();\n                  break;\n                case \"USERNAME_REGISTERED\":\n                  this.invalidateUserFeedback();\n                  break;\n                case \"PASSWORD_MISMATCH\":\n                  this.invalidatePasswordFeedback();\n                  break;\n              }\n            }\n          })\n          // If 'data' is an object, then it has no errors\n        } else {\n          // Close Modal (Probably Trigger an alert or something asw to tell the user they signed up!)\n          this.toggleModal();\n        }\n      })\n  }\n  \n  // Handles Modal Triggering\n  toggleModal() {\n    console.log(!this.state.modal);\n    this.setState({ modal: !this.state.modal })\n  }\n\n\n  render() {\n    let days = [];\n    let months = [];\n    let years = [];\n    for (let i = 1; i <= 31; i++) { days.push(i); }\n    for (let i = 1; i <= 12; i++) { months.push(i); }\n    for (let i = 1900; i <= (new Date()).getFullYear(); i++) { years.push(i); }\n    return (\n      <>\n        <ModalHeader toggle={this.toggleModal}><h3>Sign Up</h3></ModalHeader>\n        <ModalBody>\n\n          <Form className=\"createAccount-form container\">\n            <FormGroup className=\"createAccount-form-name\">\n              {/* Name Fields */}\n              <Input type=\"text\" id=\"nafname\" name=\"nafname\" placeholder=\"First Name\" onChange={this.setOnChange} />\n              <Input type=\"text\" id=\"nalname\" name=\"nalname\" placeholder=\"Last Name\" onChange={this.setOnChange} />\n            </FormGroup>\n            {/* Email Field */}\n            <FormGroup className=\"createAccount-form-email\">\n              {\n                this.state.emailinvalid\n                  ?\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} invalid />\n                  :\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Emails is taken</FormFeedback>\n            </FormGroup>\n            {/* Username Field */}\n            <FormGroup className=\"createAccount-form-username\">\n              {\n                this.state.usrinvalid ?\n                  <Input invalid type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n                  :\n                  <Input type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Username is taken</FormFeedback>\n            </FormGroup>\n            {/* Password Fields */}\n            <FormGroup className=\"createAccount-form-password\">\n              {this.state.pwinvalid ?\n                <>\n                  <Input invalid type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input invalid type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n                :\n                <>\n                  <Input type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n              }\n              <FormFeedback invalid>You will not be able to see this</FormFeedback>\n            </FormGroup>\n            <FormGroup className=\"createAccount-form-dob\">\n              <div className=\"createAccount-form-dob-label\">\n                <h6>Date Of Birth:</h6>\n              </div>\n              {/* Date Of Birth Selectors: */}\n              <select onChange={this.setOnChange} name=\"nadobday\" id=\"nadobday\" className=\"dob-day\" value={this.state.nadobday}>\n                {days.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobmonth\" id=\"nadobmonth\" className=\"dob-month\" value={this.state.nadobmonth}>\n                {months.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobyear\" id=\"nadobyear\" className=\"dob-year\" value={this.state.nadobyear}>\n                {years.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n            </FormGroup>\n            {/* Gender Selector: */}\n            <FormGroup>\n              <div className=\"createAccount-form-gender-label\">\n                <h6>Gender:</h6>\n              </div>\n              <select onChange={this.setOnChange} name=\"nagender\" id=\"nagender\" className=\"createAccount-form-gender\">\n                <option value=\"N\">---Choose A Gender Option---</option>\n                <option value=\"M\">Male</option>\n                <option value=\"F\">Female</option>\n              </select>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"signUp\" onClick={this.handleNewAccount}>Create Account</button>\n          {/* Adds Space: {' '} */}\n        </ModalFooter>\n      </>\n    )\n  }\n}\n\nexport default NewAccount;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js",["190"],"import React from 'react';\n\n// Sass:\nimport './MainNav.scss';\n\n// ReactStrap Dependencies:\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n} from 'reactstrap';\n// uuid Dependency:\nimport { v4 as uuidv4 } from 'uuid';\n\n// React Router Dependencies:\nimport {\n  Redirect\n} from 'react-router';\n\n// Containers:\nimport FriendSearch from '../FriendSearch/FriendSearchContainer';\nimport NotificationItem from '../NotificationItem/NotificationItemContainer';\n\n\nclass MainNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      optionsIsOpen: false,\n      notificationsIsOpen: false,\n      newFriendModalState: false,\n      redirectToLogin: false\n    }\n    this.toggleOptions = this.toggleOptions.bind(this);\n    this.toggleNotifications = this.toggleNotifications.bind(this);\n    this.toggleNewFriend = this.toggleNewFriend.bind(this);\n    this.logoutHandler = this.logoutHandler.bind(this);\n  }\n\n  toggleOptions() {\n    this.setState({ optionsIsOpen: !this.state.optionsIsOpen });\n  }\n\n  toggleNotifications() {\n    this.setState({ notificationsIsOpen: !this.state.notificationsIsOpen });\n  }\n\n  toggleNewFriend() {\n    this.setState({ newFriendModalState: !this.state.newFriendModalState });\n  }\n\n  logoutHandler() {\n    this.props.reInitializeStore();\n    this.setState({ redirectToLogin: true });\n  }\n\n  render() {\n    let acc_freqs = this.props.AccountDetails.acc_data.acc_freqs\n    return (\n      <>\n        <div>\n          <Navbar className=\"mainnav\" color=\"light\" light expand=\"md\">\n            <NavbarBrand href=\"/\"><img src=\"https://img.icons8.com/cute-clipart/64/000000/chat.png\" id=\"icon\" /></NavbarBrand>\n            <Nav className=\"mr-auto\"></Nav>\n            {/* Add New User Feature */}\n            <NavLink onClick={this.toggleNewFriend} href=\"#\"><i id=\"new-user\" className=\"fas fa-plus-square\"></i></NavLink>\n            <Modal isOpen={this.state.newFriendModalState} toggle={this.toggleNewFriend} className=\"\">\n              <ModalHeader toggle={this.toggleNewFriend}>Add Friend</ModalHeader>\n              <FriendSearch />\n            </Modal>\n            {/* Notifications Feature */}\n            <NavLink onClick={this.toggleNotifications} href=\"#\"><i id=\"notifications\" className=\"fas fa-bell\"></i></NavLink>\n            <Modal isOpen={this.state.notificationsIsOpen} toggle={this.toggleNotifications} className=\"\">\n              <ModalHeader toggle={this.toggleNotifications}>Notifications</ModalHeader>\n              {acc_freqs.map((acc_freq) => {\n                return (\n                  <>\n                    <NotificationItem\n                      key={uuidv4()}\n                      senderId={acc_freq.fr_sender_id._id}\n                      senderData={acc_freq.fr_sender_id}\n                      notificationTitle={`${acc_freq.fr_sender_id.acc_usrname}`}\n                      notificationLabel=\"Friend Request\"\n                      notificationType={'FRIEND_REQUEST'} />\n                  </>\n                )\n              })}\n            </Modal>\n\n            {/* Caret Dropwon Feature */}\n            <UncontrolledDropdown>\n              <DropdownToggle nav>\n                <i className=\"fas fa-caret-down\"></i>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <span><i className=\"fas fa-user\"></i>{\" \"}Profile</span>\n                </DropdownItem>\n                <DropdownItem>\n                  <span><i className=\"fas fa-cog\"></i>{\" \"}Settings</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={this.logoutHandler}>\n                  <span><i className=\"fas fa-power-off\"></i>{\" \"}Logout</span>\n                  {\n                    this.state.redirectToLogin\n                      ?\n                      <Redirect to=\"/\" />\n                      :\n                      null\n                  }\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Navbar>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default MainNav;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js",["191","192","193"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js",["194"],"import React, { useState } from 'react';\n\nimport './ChatItem.scss';\n\n\nclass ChatItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatName: props.userId,\n      chatMsg: props.userMsg,\n      isSelected: props.isSelected\n    }\n  }\n  // Initial State: Most Recent Message On The Database Via an HTTP request.\n  // Consequent Rerenders: New Dynamic Messages sent to this specific chat \n  // (Requires socket endpoints to emit the corresponding data from the client)\n  // const [chatName, setChatName] = useState(props.userId);\n  // const [chatMsg, setChatMsg] = useState(props.userMsg);\n  // const [isSelected, setSelectedState] = useState(props.isSelected);\n  // console.log(props);\n  render() {\n    return (\n    this.state.isSelected\n        ?\n        // Selected Render\n        <div className=\"chatitem selected\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n        :\n        // Not Selected Render\n        <div className=\"chatitem\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n    )\n  }\n}\nexport default ChatItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js",["195","196","197"],"import React, {useState} from 'react';\n\nimport './ChatHeader.scss';\n\nfunction ChatHeader({chatName, chatType}) {\n\n  return (\n    <>\n      <div className=\"chat-header\">\n          <h5>{chatName}</h5>\n          {\n          chatType == 'F' \n          ?\n          <button>Friends <i className=\"fas fa-check\"></i></button>\n          :\n          (chatType == 'G' \n          ?\n          <button>In Group <i className=\"fas fa-check\"></i></button>\n          :\n          null)\n          }\n      </div>\n    </>\n  )\n}\n\nexport default ChatHeader;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js",["198"],"import React from 'react';\n\nimport './ChatBody.scss';\n\n// Containers:\nimport Message from '../Message/MessageContainer';\n\nclass ChatBody extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"chatbody\">\n      <div className=\"chatbody-messages\">\n        <Message msgString=\"Yes\" isSender={false} />\n        <Message msgString=\"Yes\" isSender={true} />\n      </div>\n      <div className=\"chatbody-form\">\n        <hr />\n        <div className=\"chatbody-form-textbox\">\n          <input type=\"text\" placeholder=\"Say something...\" />\n          <button>\n          <i className=\"fas fa-caret-right fa-3x\"></i>\n          </button>\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default ChatBody;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js",["199"],"import React, {useState} from 'react';\n\nimport './Message.scss';\n\nfunction Message({msgString, isSender}) {\n\n  return(\n    isSender\n    ?\n    <div className=\"message sender\">\n      <p>{msgString}</p>\n    </div>\n    :\n    <div className=\"message reciever\">\n      <p>{msgString}</p>\n    </div>\n  )\n}\n\nexport default Message;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js",[],["200","201"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js",["202","203","204"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js",["205","206"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js",["207","208","209","210"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-error-reducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItem.js",["211","212"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroup.js",["213","214"],"import React from 'react';\n\n// Reactstrap dependencies:\nimport {\n  ModalBody,\n  ModalFooter,\n  Button,\n  FormGroup,\n  Input,\n  Label\n} from 'reactstrap';\n\nimport './NewGroup.scss';\n\nclass NewGroupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newGroupTitle: '',\n      newGroupType: 'GROUP',\n      newGroupMembers: [this.props.AccountDetails.acc_data._id],\n      newGroupLeaders: [this.props.AccountDetails.acc_data._id]\n    }\n    this.inputTitleHandler = this.inputTitleHandler.bind(this);\n    this.checkBoxChangeHandler = this.checkBoxChangeHandler.bind(this);\n    this.submitNewGroup = this.submitNewGroup.bind(this);\n  }\n\n  inputTitleHandler(event) {\n    this.setState({ newGroupTitle: event.target.value });\n  }\n  checkBoxChangeHandler(event) {\n    if (event.target.checked) {\n      this.setState({ newGroupMembers: [...this.state.newGroupMembers, event.target.id] });\n    } else {\n      let updatedGroupMembers = this.state.newGroupMembers.filter((grpMember) => grpMember !== event.target.id)\n      this.setState({ newGroupMembers: updatedGroupMembers });\n    }\n  }\n\n  submitNewGroup() {\n    this.props.createNewGroup(this.state);\n  }\n\n\n  render() {\n    let acc_friends = this.props.AccountDetails.acc_data.acc_friends;\n    return (\n      <>\n        <ModalBody>\n          <FormGroup className=\"modal-body-item\" check>\n            <div className=\"modal-body-item-title_input\">\n              <label for=\"g_title\"><h5>Group Title:</h5></label>\n              <input onChange={this.inputTitleHandler} id=\"g_title\" type=\"text\" name=\"g_title\" />\n            </div>\n          </FormGroup>\n          <FormGroup className=\"modal-body-item\" check>\n            <div className=\"modal-body-item-friend_select_input\">\n              <h5>Add Friends:</h5>\n              <div className=\"modal-body-item-friend_select_input-wrapper\">\n\n                {\n                  acc_friends.map((friend) => {\n                    return (\n                      <>\n                        <div key={friend._id} className=\"modal-body-item-friend_select_input-wrapper-item\">\n                          <label for={friend._id + '_input'} check><h6>{friend.acc_usrname}</h6></label>\n                          <input onChange={this.checkBoxChangeHandler} type=\"checkbox\" name=\"check\" id={friend._id} />\n                        </div>\n                      </>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.submitNewGroup}>Create Group</Button>{' '}\n          <Button color=\"secondary\" onClick={this.props.toggleModalHandler}>Cancel</Button>\n        </ModalFooter>\n      </>\n    )\n  }\n}\n\nexport default NewGroupForm;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupActions.js",[],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":1,"column":40,"nodeType":"221","messageId":"222","endLine":1,"endColumn":47},{"ruleId":"223","severity":1,"message":"224","line":95,"column":30,"nodeType":"225","messageId":"226","endLine":95,"endColumn":32},{"ruleId":"227","severity":1,"message":"228","line":104,"column":15,"nodeType":"229","endLine":104,"endColumn":94},{"ruleId":"230","severity":1,"message":"231","line":114,"column":15,"nodeType":"229","endLine":114,"endColumn":54},{"ruleId":"219","severity":1,"message":"232","line":2,"column":47,"nodeType":"221","messageId":"222","endLine":2,"endColumn":52},{"ruleId":"233","severity":1,"message":"234","line":87,"column":32,"nodeType":"235","messageId":"236","endLine":87,"endColumn":34},{"ruleId":"237","severity":1,"message":"238","line":89,"column":15,"nodeType":"239","messageId":"240","endLine":99,"endColumn":16},{"ruleId":"227","severity":1,"message":"228","line":70,"column":35,"nodeType":"229","endLine":70,"endColumn":113},{"ruleId":"219","severity":1,"message":"241","line":5,"column":3,"nodeType":"221","messageId":"222","endLine":5,"endColumn":9},{"ruleId":"219","severity":1,"message":"242","line":8,"column":3,"nodeType":"221","messageId":"222","endLine":8,"endColumn":12},{"ruleId":"219","severity":1,"message":"243","line":9,"column":3,"nodeType":"221","messageId":"222","endLine":9,"endColumn":14},{"ruleId":"219","severity":1,"message":"244","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":25},{"ruleId":"219","severity":1,"message":"244","line":1,"column":16,"nodeType":"221","messageId":"222","endLine":1,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":12,"column":20,"nodeType":"225","messageId":"226","endLine":12,"endColumn":22},{"ruleId":"223","severity":1,"message":"224","line":16,"column":21,"nodeType":"225","messageId":"226","endLine":16,"endColumn":23},{"ruleId":"245","severity":1,"message":"246","line":9,"column":3,"nodeType":"247","messageId":"248","endLine":11,"endColumn":4},{"ruleId":"219","severity":1,"message":"244","line":1,"column":16,"nodeType":"221","messageId":"222","endLine":1,"endColumn":24},{"ruleId":"215","replacedBy":"249"},{"ruleId":"217","replacedBy":"250"},{"ruleId":"237","severity":1,"message":"238","line":10,"column":9,"nodeType":"239","messageId":"240","endLine":120,"endColumn":10},{"ruleId":"233","severity":1,"message":"234","line":70,"column":51,"nodeType":"235","messageId":"236","endLine":70,"endColumn":53},{"ruleId":"223","severity":1,"message":"224","line":71,"column":40,"nodeType":"225","messageId":"226","endLine":71,"endColumn":42},{"ruleId":"219","severity":1,"message":"241","line":6,"column":3,"nodeType":"221","messageId":"222","endLine":6,"endColumn":9},{"ruleId":"223","severity":1,"message":"224","line":71,"column":34,"nodeType":"225","messageId":"226","endLine":71,"endColumn":36},{"ruleId":"219","severity":1,"message":"251","line":1,"column":27,"nodeType":"221","messageId":"222","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"224","line":52,"column":31,"nodeType":"225","messageId":"226","endLine":52,"endColumn":33},{"ruleId":"223","severity":1,"message":"224","line":60,"column":34,"nodeType":"225","messageId":"226","endLine":60,"endColumn":36},{"ruleId":"223","severity":1,"message":"224","line":67,"column":38,"nodeType":"225","messageId":"226","endLine":67,"endColumn":40},{"ruleId":"219","severity":1,"message":"252","line":7,"column":28,"nodeType":"221","messageId":"222","endLine":7,"endColumn":47},{"ruleId":"223","severity":1,"message":"224","line":32,"column":25,"nodeType":"225","messageId":"226","endLine":32,"endColumn":27},{"ruleId":"219","severity":1,"message":"253","line":9,"column":3,"nodeType":"221","messageId":"222","endLine":9,"endColumn":8},{"ruleId":"219","severity":1,"message":"232","line":10,"column":3,"nodeType":"221","messageId":"222","endLine":10,"endColumn":8},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Label' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Button' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'useState' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["254"],["255"],"'useEffect' is defined but never used.","'setNotificationType' is assigned a value but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]