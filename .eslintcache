[{"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js":"1","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js":"2","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js":"3","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js":"4","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js":"5","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js":"6","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js":"7","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js":"8","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js":"9","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js":"10","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js":"11","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js":"12","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js":"13","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js":"14","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js":"15","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js":"16","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js":"17","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js":"18","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js":"19","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js":"20","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js":"21","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js":"22","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js":"23","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js":"24","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js":"25","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js":"26","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js":"27","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js":"28","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js":"29","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js":"30","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js":"31","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemContainer.js":"32","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemActions.js":"33","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-error-reducer.js":"34","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItem.js":"35","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemContainer.js":"36","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemActions.js":"37","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroup.js":"38","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupContainer.js":"39","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupActions.js":"40","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarReducer.js":"41","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/WelcomeBody/WelcomeBody.js":"42","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderActions.js":"43","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Profile/Profile.js":"44","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Profile/ProfileContainer.js":"45","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/GroupItem/GroupItem.js":"46","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainReducer.js":"47","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/_shared/actions/UpdateLogStateAction.js":"48","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/_shared/actions/ReInitializeStoreAction.js":"49","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/AppContainer.js":"50","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavActions.js":"51"},{"size":550,"mtime":1610503182966,"results":"52","hashOfConfig":"53"},{"size":890,"mtime":1610450637821,"results":"54","hashOfConfig":"53"},{"size":2461,"mtime":1610579261414,"results":"55","hashOfConfig":"53"},{"size":515,"mtime":1610447506395,"results":"56","hashOfConfig":"53"},{"size":6082,"mtime":1610503487241,"results":"57","hashOfConfig":"53"},{"size":8029,"mtime":1609902796116,"results":"58","hashOfConfig":"53"},{"size":866,"mtime":1610498264760,"results":"59","hashOfConfig":"53"},{"size":631,"mtime":1610492679610,"results":"60","hashOfConfig":"53"},{"size":296,"mtime":1610444485866,"results":"61","hashOfConfig":"53"},{"size":3988,"mtime":1610523596131,"results":"62","hashOfConfig":"53"},{"size":853,"mtime":1610519829407,"results":"63","hashOfConfig":"53"},{"size":729,"mtime":1610521139214,"results":"64","hashOfConfig":"53"},{"size":4764,"mtime":1610523749269,"results":"65","hashOfConfig":"53"},{"size":4098,"mtime":1609902830288,"results":"66","hashOfConfig":"53"},{"size":1162,"mtime":1609630625015,"results":"67","hashOfConfig":"53"},{"size":499,"mtime":1609628437061,"results":"68","hashOfConfig":"53"},{"size":451,"mtime":1609818162049,"results":"69","hashOfConfig":"53"},{"size":873,"mtime":1609818496536,"results":"70","hashOfConfig":"53"},{"size":405,"mtime":1609651970792,"results":"71","hashOfConfig":"53"},{"size":3016,"mtime":1609898544569,"results":"72","hashOfConfig":"53"},{"size":232,"mtime":1608442202017,"results":"73","hashOfConfig":"53"},{"size":973,"mtime":1609803297845,"results":"74","hashOfConfig":"53"},{"size":687,"mtime":1609898372095,"results":"75","hashOfConfig":"53"},{"size":284,"mtime":1608636198762,"results":"76","hashOfConfig":"53"},{"size":0,"mtime":1608636264966,"results":"77","hashOfConfig":"53"},{"size":342,"mtime":1609631890922,"results":"78","hashOfConfig":"53"},{"size":6775,"mtime":1610505173761,"results":"79","hashOfConfig":"53"},{"size":480,"mtime":1610519842622,"results":"80","hashOfConfig":"53"},{"size":302,"mtime":1608883499567,"results":"81","hashOfConfig":"53"},{"size":2659,"mtime":1609902751021,"results":"82","hashOfConfig":"53"},{"size":2453,"mtime":1609902889639,"results":"83","hashOfConfig":"53"},{"size":568,"mtime":1609483905035,"results":"84","hashOfConfig":"53"},{"size":479,"mtime":1609483935080,"results":"85","hashOfConfig":"53"},{"size":406,"mtime":1609233519131,"results":"86","hashOfConfig":"53"},{"size":1672,"mtime":1609482614517,"results":"87","hashOfConfig":"53"},{"size":740,"mtime":1609482511630,"results":"88","hashOfConfig":"53"},{"size":1167,"mtime":1609482497006,"results":"89","hashOfConfig":"53"},{"size":2823,"mtime":1609892159962,"results":"90","hashOfConfig":"53"},{"size":399,"mtime":1609455837880,"results":"91","hashOfConfig":"53"},{"size":160,"mtime":1609676565181,"results":"92","hashOfConfig":"53"},{"size":491,"mtime":1609819151034,"results":"93","hashOfConfig":"53"},{"size":781,"mtime":1609895611912,"results":"94","hashOfConfig":"53"},{"size":614,"mtime":1609819172096,"results":"95","hashOfConfig":"53"},{"size":4626,"mtime":1610579305985,"results":"96","hashOfConfig":"53"},{"size":287,"mtime":1610419343489,"results":"97","hashOfConfig":"53"},{"size":335,"mtime":1610438667236,"results":"98","hashOfConfig":"53"},{"size":614,"mtime":1610520888532,"results":"99","hashOfConfig":"53"},{"size":132,"mtime":1610452703223,"results":"100","hashOfConfig":"53"},{"size":225,"mtime":1610497723955,"results":"101","hashOfConfig":"53"},{"size":260,"mtime":1610503209278,"results":"102","hashOfConfig":"53"},{"size":119,"mtime":1610521110684,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7n2hzo",{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"109"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"109"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"109"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"109"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"109"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"109"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"109"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"109"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"109"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"109"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"109"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js",["220"],"import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport rootReducer from './rootReducer';\nimport createSocketMiddleware from './utils/socket-middleware';\n\nconst middleware = [thunk, createSocketMiddleware()];\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Configuration If NPM Package Isn't needed.\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };",["221","222"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js",["223","224","225"],"import React, { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport * as crypto from 'crypto';\n\n// Containers:\nimport Login from './Login/LoginContainer';\nimport Main from './Main/MainContainer';\nimport Profile from './Profile/ProfileContainer';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      clientId: '',\n      redirect: false\n    }\n    this.setClientIdWrapper = this.setClientIdWrapper.bind(this);\n    // this.setRedirectWrapper = this.setRedirectWrapper.bind(this);\n  }\n  // ClientId will NOT be reset & is immutable.\n  setClientIdWrapper = async (id) => {\n    this.setState({ clientId: id });\n  }\n  // setRedirectWrapper = (bool) => {\n  //   this.setState({ redirect: bool });\n  // }\n  componentDidUpdate() {\n    if (!this.state.redirect) {\n      console.log(this.state.redirect);\n      this.setState({ redirect: true });\n    }\n  }\n  render() {\n    if (this.props.AccountDetails && this.state.redirect == false) {\n      if (Object.keys(this.props.AccountDetails.acc_data).length > 0 && this.props.AccountDetails.loggedOn == true) {\n        this.setState({ clientId: crypto.randomBytes(32).toString('hex') });\n      }\n    }\n    console.log(this.state.clientId);\n    console.log(this.state.redirect);\n    console.log(this.state.clientId !== '' && this.state.redirect === true)\n    return (\n      <div className=\"App\">\n        <Router basename=\"/\">\n          <Route path=\"/\" exact component={Login}>\n            <Login\n              // setRedirectWrapper={this.setRedirectWrapper}\n              setClientIdWrapper={this.setClientIdWrapper}\n            />\n            {/* Redirect Initiative */}\n            {this.state.clientId !== '' && this.state.redirect === true\n              ?\n              <Redirect push to=\"/main\" />\n              :\n              null\n            }\n          </Route>\n          <Route path=\"/main\" exact component={Main}>\n            <Main\n              clientId={this.state.clientId}\n              setClientIdWrapper={this.setClientIdWrapper}\n            />\n          </Route>\n          <Route path=\"/profile/:id\" exact component={Profile}>\n            <Profile \n              clientId={this.state.clientId}\n              setClientIdWrapper={this.setClientIdWrapper}\n            />\n          </Route>\n\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js",["226"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js",["227","228","229"],"import React from 'react';\nimport { ModalHeader, ModalBody, ModalFooter, Label, Input, Form, FormGroup, FormFeedback } from 'reactstrap';\n\nimport './NewAccount.scss';\n\nclass NewAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // New Account\n      nafname: \"\",\n      nalname: \"\",\n      nausername: \"\",\n      naemailaddr: \"\",\n      napassword1: \"\",\n      napassword2: \"\",\n      nadobday: 1,\n      nadobmonth: 1,\n      nadobyear: (new Date()).getFullYear(),\n      nagender: \"N\",\n      usrinvalid: false,\n      emailinvalid: false,\n      pwinvalid: false,\n    }\n    // SetOnChange (State Managing Callback)\n    this.setOnChange = this.setOnChange.bind(this);\n    // Create Account Request Handler\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    // Modal Trigger\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  // Create Account Handlers\n  setOnChange(event) {\n    let fieldID = event.target.id;\n    let obj = {};\n    obj[`${fieldID}`] = event.target.value;\n    this.setState(obj);\n    this.setState({\n      emailinvalid: false,\n      usrinvalid: false,\n      pwinvalid: false\n    })\n  }\n\n  // Feedbback Togglers\n  invalidateEmailFeedback() {\n    this.setState({ emailinvalid: true })\n  }\n  invalidateUserFeedback() {\n    this.setState({ usrinvalid: true })\n  }\n  invalidatePasswordFeedback() {\n    this.setState({ pwinvalid: true })\n  }\n\n  handleNewAccount(event) {\n    // Check #1: Check if passwords match:\n    // Check #2 Check if username is being used already:\n    // Check #3 Check if email is being used already:\n    fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/newaccount`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        nafname: this.state.nafname,\n        nalname: this.state.nalname,\n        nausername: this.state.nausername,\n        naemailaddr: this.state.naemailaddr,\n        napassword1: this.state.napassword1,\n        napassword2: this.state.napassword2,\n        nadobday: this.state.nadobday,\n        nadobmonth: this.state.nadobmonth,\n        nadobyear: this.state.nadobyear,\n        nagender: this.state.nagender\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        // If 'data' is an array, then it has errors\n        if (Array.isArray(data)) {\n          // Handles error messages\n          data.map((item, idx) => {\n            if ('code' in item) {\n              switch (item.code) {\n                case \"EMAIL_REGISTERED\":\n                  this.invalidateEmailFeedback();\n                  break;\n                case \"USERNAME_REGISTERED\":\n                  this.invalidateUserFeedback();\n                  break;\n                case \"PASSWORD_MISMATCH\":\n                  this.invalidatePasswordFeedback();\n                  break;\n              }\n            }\n          })\n          // If 'data' is an object, then it has no errors\n        } else {\n          // Close Modal (Probably Trigger an alert or something asw to tell the user they signed up!)\n          this.toggleModal();\n        }\n      })\n  }\n\n  // Handles Modal Triggering\n  toggleModal() {\n    this.setState({ modal: !this.state.modal })\n  }\n\n\n  render() {\n    let days = [];\n    let months = [];\n    let years = [];\n    for (let i = 1; i <= 31; i++) { days.push(i); }\n    for (let i = 1; i <= 12; i++) { months.push(i); }\n    for (let i = 1900; i <= (new Date()).getFullYear(); i++) { years.push(i); }\n    return (\n      <>\n        <ModalHeader toggle={this.toggleModal}><h3>Sign Up</h3></ModalHeader>\n        <ModalBody>\n\n          <Form className=\"createAccount-form container\">\n            <FormGroup className=\"createAccount-form-name\">\n              {/* Name Fields */}\n              <Input type=\"text\" id=\"nafname\" name=\"nafname\" placeholder=\"First Name\" onChange={this.setOnChange} />\n              <Input type=\"text\" id=\"nalname\" name=\"nalname\" placeholder=\"Last Name\" onChange={this.setOnChange} />\n            </FormGroup>\n            {/* Email Field */}\n            <FormGroup className=\"createAccount-form-email\">\n              {\n                this.state.emailinvalid\n                  ?\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} invalid />\n                  :\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Emails is taken</FormFeedback>\n            </FormGroup>\n            {/* Username Field */}\n            <FormGroup className=\"createAccount-form-username\">\n              {\n                this.state.usrinvalid ?\n                  <Input invalid type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n                  :\n                  <Input type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Username is taken</FormFeedback>\n            </FormGroup>\n            {/* Password Fields */}\n            <FormGroup className=\"createAccount-form-password\">\n              {this.state.pwinvalid ?\n                <>\n                  <Input invalid type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input invalid type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n                :\n                <>\n                  <Input type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n              }\n              <FormFeedback invalid>You will not be able to see this</FormFeedback>\n            </FormGroup>\n            <FormGroup className=\"createAccount-form-dob\">\n              <div className=\"createAccount-form-dob-label\">\n                <h6>Date Of Birth:</h6>\n              </div>\n              {/* Date Of Birth Selectors: */}\n              <select onChange={this.setOnChange} name=\"nadobday\" id=\"nadobday\" className=\"dob-day\" value={this.state.nadobday}>\n                {days.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobmonth\" id=\"nadobmonth\" className=\"dob-month\" value={this.state.nadobmonth}>\n                {months.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobyear\" id=\"nadobyear\" className=\"dob-year\" value={this.state.nadobyear}>\n                {years.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n            </FormGroup>\n            {/* Gender Selector: */}\n            <FormGroup>\n              <div className=\"createAccount-form-gender-label\">\n                <h6>Gender:</h6>\n              </div>\n              <select onChange={this.setOnChange} name=\"nagender\" id=\"nagender\" className=\"createAccount-form-gender\">\n                <option value=\"N\">---Choose A Gender Option---</option>\n                <option value=\"M\">Male</option>\n                <option value=\"F\">Female</option>\n              </select>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter className=\"createAccount-footer\">\n          <button className=\"signUp\" onClick={this.handleNewAccount}>Create Account</button>\n          {/* Adds Space: {' '} */}\n        </ModalFooter>\n      </>\n    )\n  }\n}\n\nexport default NewAccount;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js",["230","231","232","233"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js",["234"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js",["235"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js",["236","237","238","239","240"],"import React from 'react';\n\n// Reactstrap dependencies:\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\n// uuid\nimport { v4 as uuidv4 } from 'uuid';\n\n//Components:\nimport ChatItem from '../ChatItem/ChatItem';\nimport NewGroupForm from '../NewGroup/NewGroupContainer';\n\n// Style Sheets\nimport './SideBar.scss';\n\nclass SideBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0,\n      openModal: false,\n    }\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleClickEvt = this.handleClickEvt.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({ openModal: !this.state.openModal });\n  }\n\n  handleClickEvt(idx) {\n    this.props.updateSelectedChatItem(idx);\n  }\n\n  // Component Initial State:\n  // Chat Windows For All Friends/Groups\n  // (Get from ACCOUNT_IN entity for the corresponding acc_id stored on redux state)\n  // Consequent Rerenders:\n  // Potentially New Chat Groups (Includes Friends) being added\n  render() {\n    let acc_grps = this.props.AccountDetails.acc_data.acc_grps;\n    return (\n      <>\n        <div className=\"sidebar\">\n          <div className=\"sidebar-header\">\n            <h3>Chats</h3>\n            <button onClick={this.toggleModal} className=\"sidebar-header-newgroup-button\">\n              <i className=\"fas fa-user-plus\"></i>\n            </button>\n            <Modal isOpen={this.state.openModal} toggle={this.toggleModal} className=\"\">\n              <ModalHeader toggle={this.toggleModal}>New Group</ModalHeader>\n              <NewGroupForm toggleModalHandler={this.toggleModal} />\n            </Modal>\n          </div>\n          <hr />\n          {/* Friends/Groups Item Entry */}\n          <div className=\"sidebar-body\">\n            <div onClick={() => this.handleClickEvt(0)}>\n              {0 == this.props.SideBarDetails.selectedChatItem\n                ?\n                <ChatItem\n                  userId={`Welcome ${this.props.AccountDetails.acc_data.acc_usrname}!`}\n                  userMsg={`Click here for more details.`}\n                  key={uuidv4()}\n                  isSelected={true}\n                />\n                :\n                <ChatItem\n                  userId={`Welcome ${this.props.AccountDetails.acc_data.acc_usrname}`}\n                  userMsg={`Click here for more details.`}\n                  key={uuidv4()}\n                  isSelected={false}\n                />\n              }\n            </div>\n            {/* Sample World Chat Component (Will need to create this entity in the DB later on!) */}\n            {/* <div onClick={() => this.handleClickEvt(1)}>\n              {1 == this.props.SideBarDetails.selectedChatItem\n                ?\n                <ChatItem\n                  userId={`World Chat`}\n                  userMsg={`Click here to talk to other users.`}\n                  key={uuidv4()}\n                  isSelected={true}\n                />\n                :\n                <ChatItem\n                  userId={`World Chat`}\n                  userMsg={`Click here to talk to other users.`}\n                  key={uuidv4()}\n                  isSelected={false}\n                />\n              }\n            </div> */}\n            {/* All the ChatGroups the user/account is currently in. */}\n            {\n              acc_grps.map((grp, idx) => (\n                <div onClick={() => this.handleClickEvt(idx + 1)}>\n                  {idx + 1 == this.props.SideBarDetails.selectedChatItem\n                    ?\n                    <ChatItem\n                      userId={grp.g_title}\n                      userMsg={grp.g_type}\n                      key={uuidv4()}\n                      isSelected={true}\n                    />\n                    :\n                    <ChatItem\n                      userId={grp.g_title}\n                      userMsg={grp.g_type}\n                      key={uuidv4()}\n                      isSelected={false}\n                    />}\n                </div>\n              ))\n            }\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default SideBar;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js",["241"],"import React, { useState } from 'react';\n\nimport './ChatItem.scss';\n\n\nclass ChatItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatName: props.userId,\n      chatMsg: props.userMsg,\n      isSelected: props.isSelected\n    }\n  }\n  // Initial State: Most Recent Message On The Database Via an HTTP request.\n  // Consequent Rerenders: New Dynamic Messages sent to this specific chat \n  // (Requires socket endpoints to emit the corresponding data from the client)\n  // const [chatName, setChatName] = useState(props.userId);\n  // const [chatMsg, setChatMsg] = useState(props.userMsg);\n  // const [isSelected, setSelectedState] = useState(props.isSelected);\n  // console.log(props);\n  render() {\n    return (\n      this.state.isSelected\n        ?\n        // Selected Render\n        <div className=\"chatitem selected\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n        :\n        // Not Selected Render\n        <div className=\"chatitem\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n    )\n  }\n}\nexport default ChatItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js",["242","243","244"],"import React, { useState } from 'react';\n\nimport './ChatHeader.scss';\n\nfunction ChatHeader({ chatName, chatType, viewedGrp, leaveGroup, leaveGroupStore, acc_id }) {\n\n  const handleLeaveGroup = () => {\n    leaveGroupStore({\n      g_id: viewedGrp._id,\n    })\n    leaveGroup({\n      g_id: viewedGrp._id,\n      acc_id: acc_id\n    });\n  }\n\n  return (\n    <>\n      <div className=\"chat-header\">\n        <h5>{chatName}</h5>\n        {\n          // 'FRIENDS IS NOT IMPLEMENTED YET, SO FORGET ABOUT IT!'\n          chatType == 'FRIENDS'\n            ?\n            <button>Friends <i className=\"fas fa-check\"></i></button>\n            :\n            (chatType == 'GROUP'\n              ?\n              <button onClick={handleLeaveGroup}>In Group <i className=\"fas fa-check\"></i></button>\n              :\n              null)\n        }\n      </div>\n    </>\n  )\n}\n\nexport default ChatHeader;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js",["245","246","247","248","249"],"import React from 'react';\n\nimport './ChatBody.scss';\n\n// Containers:\nimport Message from '../Message/MessageContainer';\n\nclass ChatBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messageInput: ''\n    }\n    this.messagesEndRef = React.createRef();\n    this.submitMessageInput = this.submitMessageInput.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount() {\n    this.scrollToBottom()\n  }\n  componentDidUpdate() {\n    this.scrollToBottom()\n  }\n\n  submitMessageInput() {\n    console.log(this.state.messageInput);\n    if (this.state.messageInput !== '') {\n      this.props.sendNewMessage({\n        g_id: this.props.viewedGrp._id,\n        msg_string: this.state.messageInput\n      });\n    }\n  }\n\n  // Scrolls page to bottom (ngl, idk what is really happening here)\n  scrollToBottom = () => {\n    this.messagesEndRef.current.scrollIntoView({ behavior: 'auto' })\n  }\n\n  handleKeyPress(event) {\n    if (event.key == 'Enter') {\n      this.submitMessageInput();\n    }\n  }\n\n  render() {\n    let clientId = this.props.AccountDetails.acc_data._id;\n    let displayMessages = this.props.viewedGrp.g_messages;\n    return (\n      <div className=\"chatbody\">\n        <div className=\"chatbody-messages\">\n          {\n            displayMessages.map((msg, idx, elements) => {\n              return (\n                !(idx + 1 >= elements.length)\n                  ?\n                  (msg.m_sender._id != elements[idx + 1].m_sender._id\n                    ?\n                    // Last message in a row by a specific user.\n                    <Message\n                      senderName={msg.m_sender.acc_usrname}\n                      msgString={msg.msg_string}\n                      isSender={clientId == msg.m_sender._id}\n                      marginBottom={true}\n                    />\n                    :\n                    <Message\n                      senderName={msg.m_sender.acc_usrname}\n                      msgString={msg.msg_string}\n                      isSender={clientId == msg.m_sender._id}\n                      marginBottom={false}\n                    />)\n                  :\n                  <Message\n                    senderName={msg.m_sender.acc_usrname}\n                    msgString={msg.msg_string}\n                    isSender={clientId == msg.m_sender._id}\n                    marginBottom={false}\n                  />\n              )\n            })\n          }\n          <div ref={this.messagesEndRef} />\n        </div>\n        <div className=\"chatbody-form\">\n          <hr />\n          <div className=\"chatbody-form-textbox\">\n            <input onKeyPress={this.handleKeyPress} onChange={(e) => { this.setState({ messageInput: e.target.value }) }} type=\"text\" placeholder=\"Say something...\" />\n            <button onClick={this.submitMessageInput}>\n              <i className=\"fas fa-caret-right fa-3x\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ChatBody;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js",["250"],"import React, { useState } from 'react';\n\nimport './Message.scss';\n\nfunction Message({ senderName, msgString, isSender, marginBottom, messageSpan }) {\n\n  return (\n    isSender\n      ?\n      // Sender:\n      (\n        marginBottom\n          ?\n          <div className=\"message sender margin-bottom\">\n            <p>{msgString}</p>\n          </div>\n          :\n          <div className=\"message sender\">\n            <p>{msgString}</p>\n          </div>\n      )\n      :\n      (// Others User Messages:\n        marginBottom\n          ?\n          <>\n            <span className=\"message-span\">{senderName}</span>\n            <div className=\"message reciever margin-bottom\">\n              <p>{msgString}</p>\n            </div>\n          </>\n          :\n          <>\n            <span className=\"message-span\">{senderName}</span>\n            <div className=\"message reciever\">\n              <p>{msgString}</p>\n            </div>\n          </>\n      )\n  )\n}\n\nexport default Message;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js",[],["251","252"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js",["253","254","255","256","257"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js",["258"],"import React from 'react';\n\nimport {\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './FriendSearch.scss';\n\n// Components:\nimport FriendItem from '../FriendItem/FriendItemContainer';\nimport NotificationItem from '../NotificationItem/NotificationItemContainer';\n\n/*\nForm Body That Controls How The New Friend Feature Adds New Friends.\n*/\nclass FriendSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: '',\n      emitSearch: false,\n      searchData: []\n    }\n    this.searchTimeout = null;\n    this.handleSearchAccount = this.handleSearchAccount.bind(this);\n  }\n\n  handleSearchAccount(event) {\n    this.setState({ searchString: event.target.value });\n    clearTimeout(this.searchTimeout);\n    this.searchTimeout = setTimeout(() => {\n      fetch(`${window.location.protocol}//${window.location.host}/api/search/getFriends/${this.props.AccountDetails.acc_data._id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userNameQuery: event.target.value\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          // console.log(data[0]['frStatus']);\n          this.setState({ searchData: data });\n        })\n    }, 3000)\n  }\n\n\n\n  render() {\n    return (\n      <>\n        <ModalBody>\n          {this.state.searchData.map((accountItem) => (\n            accountItem.frStatus == 'R_SENT'\n              ?\n              <NotificationItem\n                key={uuidv4()}\n                senderId={accountItem._id}\n                notificationTitle={accountItem.acc_usrname}\n                notificationLabel=\"Friend Request\"\n                notificationType={'FRIEND_REQUEST'}\n              />\n              :\n              <FriendItem\n                key={uuidv4()}\n                acc_id={accountItem._id}\n                friendStatus={accountItem.frStatus}\n                userName={accountItem.acc_usrname}\n                fname={accountItem.acc_fname}\n                lname={accountItem.acc_lname}\n                searchData={accountItem}\n              />\n          )\n          )}\n          {/* <FriendItem friendStatus={\"PENDING\"} userName=\"Friendbro\" fname=\"Al\" lname=\"Stein\" />\n          <FriendItem friendStatus={\"ACCEPTED\"} userName=\"Requestbro\" fname=\"Jeff\" lname=\"Thew\" /> */}\n\n        </ModalBody>\n        <ModalFooter>\n          <input onChange={this.handleSearchAccount} type=\"text\" placeholder=\"Search Users...\" />\n        </ModalFooter>\n      </>\n    )\n  }\n}\n\nexport default FriendSearch;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js",["259","260","261","262"],"import React, { useState, useEffect } from 'react';\nimport './FriendItem.scss';\n\nfunction FriendItem(props) {\n\n  const [interactionState, setInteractionState] = useState(props.friendStatus);\n  // 5 JAN 12:06 AM:\n  // FOR SOME REASON THE SEARCH ICON DOES NOT \n  // RERENDER UPON CHANGE THE SEARCH BAR'S REGEX SEARCH EXPRESSION\n\n  // useEffect(() => {\n  //   console.log(props.friendStatus);\n  //   console.log(interactionState);\n  //   if (props.friendStatus !== interactionState) {\n  //     console.log('--SET!--');\n  //     setInteractionState(props.friendStatus);\n  //   }\n  // })\n\n  const sendFriendReq = () => {\n    props.sendFriendReq({\n      sender_id: props.AccountDetails.acc_data._id,\n      reciever_id: props.acc_id\n    });\n    setInteractionState('SENT');\n  }\n  const deleteFriendReq = () => {\n    props.deleteFriendReq({\n      sender_id: props.AccountDetails.acc_data._id,\n      reciever_id: props.acc_id\n    });\n    setInteractionState('UNSENT');\n  }\n  const removeFriend = async () => {\n    props.removeFriend({\n      sender_id: props.AccountDetails.acc_data._id,\n      reciever_id: props.acc_id\n    });\n    setInteractionState('UNSENT');\n  }\n\n  return (\n    <>\n      <div className=\"frienditem\">\n        <div className=\"frienditem-header\">\n          <h6>{props.userName}</h6>\n          <p>{props.fname}{\" \"}{props.lname}</p>\n        </div>\n\n        {\n          <>\n            {interactionState == 'UNSENT'\n              ?\n              <button key={props.AccountDetails.acc_data._id + '_1'} onClick={sendFriendReq} className=\"frienditem-icon\">\n                <i className=\"fas fa-user-plus\"></i>\n              </button>\n\n              :\n              (\n                interactionState == 'SENT'\n                  ?\n                  <button key={props.AccountDetails.acc_data._id + '_2'} onClick={deleteFriendReq} className=\"frienditem-icon\">\n                    <i class=\"fas fa-user-minus\"></i>\n                  </button>\n                  :\n                  (\n                    interactionState == 'FRIENDS'\n                      ?\n                      <button key={props.AccountDetails.acc_data._id + '_3'} onClick={removeFriend} className=\"frienditem-icon\">\n                        <i className=\"fas fa-check\"></i>\n                      </button>\n                      :\n                      null\n                  )\n              )\n            }\n          </>\n        }\n      </div>\n    </>\n  )\n}\n\nexport default FriendItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-error-reducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItem.js",["263","264"],"import React, { useState } from 'react';\n\nimport './NotificationItem.scss';\n\nfunction NotificationItem(props) {\n\n  const [notificationType, setNotificationType] = useState(props.notificationType);\n\n  const acceptFriendRequest = () => {\n    // Update the accepting user's redux store to correspond with the the database.\n    props.addFriendToStore(props.senderData);\n    props.acceptFriendRequest({\n      reciever_id: props.AccountDetails.acc_data._id,\n      sender_id: props.senderId\n    });\n    props.removeFriendReqFromStore({\n      sender_id: props.senderId\n    });\n  }\n  const rejectFriendRequest = () => {\n    props.rejectFriendRequest({\n      reciever_id: props.AccountDetails.acc_data._id,\n      sender_id: props.senderId\n    });\n    props.removeFriendReqFromStore({\n      sender_id: props.senderId\n    });\n  }\n\n  return (\n    <>\n      {notificationType == 'FRIEND_REQUEST'\n        ?\n        <div className=\"notification-item\">\n          <div className=\"notification-item-header\">\n            <h6>{props.notificationTitle}</h6>\n            <p>{props.notificationLabel}</p>\n          </div>\n          <div className=\"notification-item-icons\">\n            {/* Accept Friend Request */}\n            <button onClick={acceptFriendRequest} className=\"notification-item-icons-item\">\n              <i className=\"fas fa-check-circle\"></i>\n            </button>\n            {/* Delete Friend Request */}\n            <button onClick={rejectFriendRequest} className=\"notification-item-icons-item\">\n              <i className=\"fas fa-times-circle\"></i>\n            </button>\n          </div>\n        </div>\n        :\n        null}\n    </>\n  )\n}\n\nexport default NotificationItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NotificationItem/NotificationItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroup.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewGroup/NewGroupActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarReducer.js",["265"],"import SideBar from \"./SideBar\"\n\nconst initialState = {\n  selectedChatItem: 0\n}\n\nfunction SideBarReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'UPDATE_SELECTED_CHATITEM':\n      return { ...state, selectedChatItem: action.payload }\n    case 'REINITIALIZE_CLIENT':\n      return { ...state, selectedChatItem: 0 }\n    case 'RESET_SELECTED_CHATITEM':\n      return { ...state, selectedChatItem: 0 }\n    default:\n      return state\n  }\n\n}\n\nexport default SideBarReducer;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/WelcomeBody/WelcomeBody.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Profile/Profile.js",["266"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Profile/ProfileContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/GroupItem/GroupItem.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/_shared/actions/UpdateLogStateAction.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/_shared/actions/ReInitializeStoreAction.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/AppContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavActions.js",[],{"ruleId":"267","severity":1,"message":"268","line":1,"column":40,"nodeType":"269","messageId":"270","endLine":1,"endColumn":47},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"267","severity":1,"message":"275","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":38,"column":58,"nodeType":"278","messageId":"279","endLine":38,"endColumn":60},{"ruleId":"276","severity":1,"message":"277","line":39,"column":108,"nodeType":"278","messageId":"279","endLine":39,"endColumn":110},{"ruleId":"280","severity":1,"message":"281","line":159,"column":15,"nodeType":"282","endLine":159,"endColumn":94},{"ruleId":"267","severity":1,"message":"283","line":2,"column":47,"nodeType":"269","messageId":"270","endLine":2,"endColumn":52},{"ruleId":"284","severity":1,"message":"285","line":85,"column":32,"nodeType":"286","messageId":"287","endLine":85,"endColumn":34},{"ruleId":"288","severity":1,"message":"289","line":87,"column":15,"nodeType":"290","messageId":"291","endLine":97,"endColumn":16},{"ruleId":"276","severity":1,"message":"277","line":37,"column":33,"nodeType":"278","messageId":"279","endLine":37,"endColumn":35},{"ruleId":"276","severity":1,"message":"277","line":55,"column":14,"nodeType":"278","messageId":"279","endLine":55,"endColumn":16},{"ruleId":"276","severity":1,"message":"277","line":55,"column":49,"nodeType":"278","messageId":"279","endLine":55,"endColumn":51},{"ruleId":"276","severity":1,"message":"277","line":82,"column":61,"nodeType":"278","messageId":"279","endLine":82,"endColumn":63},{"ruleId":"267","severity":1,"message":"292","line":8,"column":66,"nodeType":"269","messageId":"270","endLine":8,"endColumn":87},{"ruleId":"280","severity":1,"message":"281","line":77,"column":35,"nodeType":"282","endLine":77,"endColumn":113},{"ruleId":"267","severity":1,"message":"293","line":5,"column":3,"nodeType":"269","messageId":"270","endLine":5,"endColumn":9},{"ruleId":"267","severity":1,"message":"294","line":8,"column":3,"nodeType":"269","messageId":"270","endLine":8,"endColumn":12},{"ruleId":"267","severity":1,"message":"295","line":9,"column":3,"nodeType":"269","messageId":"270","endLine":9,"endColumn":14},{"ruleId":"276","severity":1,"message":"277","line":65,"column":18,"nodeType":"278","messageId":"279","endLine":65,"endColumn":20},{"ruleId":"276","severity":1,"message":"277","line":105,"column":28,"nodeType":"278","messageId":"279","endLine":105,"endColumn":30},{"ruleId":"267","severity":1,"message":"275","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":25},{"ruleId":"267","severity":1,"message":"275","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":23,"column":20,"nodeType":"278","messageId":"279","endLine":23,"endColumn":22},{"ruleId":"276","severity":1,"message":"277","line":27,"column":23,"nodeType":"278","messageId":"279","endLine":27,"endColumn":25},{"ruleId":"276","severity":1,"message":"277","line":42,"column":19,"nodeType":"278","messageId":"279","endLine":42,"endColumn":21},{"ruleId":"276","severity":1,"message":"296","line":58,"column":37,"nodeType":"278","messageId":"279","endLine":58,"endColumn":39},{"ruleId":"276","severity":1,"message":"277","line":64,"column":42,"nodeType":"278","messageId":"279","endLine":64,"endColumn":44},{"ruleId":"276","severity":1,"message":"277","line":71,"column":42,"nodeType":"278","messageId":"279","endLine":71,"endColumn":44},{"ruleId":"276","severity":1,"message":"277","line":78,"column":40,"nodeType":"278","messageId":"279","endLine":78,"endColumn":42},{"ruleId":"267","severity":1,"message":"275","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":25},{"ruleId":"271","replacedBy":"297"},{"ruleId":"273","replacedBy":"298"},{"ruleId":"288","severity":1,"message":"289","line":10,"column":9,"nodeType":"290","messageId":"291","endLine":157,"endColumn":10},{"ruleId":"284","severity":1,"message":"285","line":80,"column":51,"nodeType":"286","messageId":"287","endLine":80,"endColumn":53},{"ruleId":"276","severity":1,"message":"277","line":81,"column":40,"nodeType":"278","messageId":"279","endLine":81,"endColumn":42},{"ruleId":"284","severity":1,"message":"285","line":113,"column":45,"nodeType":"286","messageId":"287","endLine":113,"endColumn":47},{"ruleId":"276","severity":1,"message":"277","line":114,"column":37,"nodeType":"278","messageId":"279","endLine":114,"endColumn":39},{"ruleId":"276","severity":1,"message":"277","line":60,"column":34,"nodeType":"278","messageId":"279","endLine":60,"endColumn":36},{"ruleId":"267","severity":1,"message":"299","line":1,"column":27,"nodeType":"269","messageId":"270","endLine":1,"endColumn":36},{"ruleId":"276","severity":1,"message":"277","line":52,"column":31,"nodeType":"278","messageId":"279","endLine":52,"endColumn":33},{"ruleId":"276","severity":1,"message":"277","line":60,"column":34,"nodeType":"278","messageId":"279","endLine":60,"endColumn":36},{"ruleId":"276","severity":1,"message":"277","line":67,"column":38,"nodeType":"278","messageId":"279","endLine":67,"endColumn":40},{"ruleId":"267","severity":1,"message":"300","line":7,"column":28,"nodeType":"269","messageId":"270","endLine":7,"endColumn":47},{"ruleId":"276","severity":1,"message":"277","line":32,"column":25,"nodeType":"278","messageId":"279","endLine":32,"endColumn":27},{"ruleId":"267","severity":1,"message":"301","line":1,"column":8,"nodeType":"269","messageId":"270","endLine":1,"endColumn":15},{"ruleId":"276","severity":1,"message":"277","line":89,"column":46,"nodeType":"278","messageId":"279","endLine":89,"endColumn":48},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-native-reassign",["302"],"no-negated-in-lhs",["303"],"'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Label' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'removeClientFromStore' is defined but never used.","'Button' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","Expected '!==' and instead saw '!='.",["302"],["303"],"'useEffect' is defined but never used.","'setNotificationType' is assigned a value but never used.","'SideBar' is defined but never used.","no-global-assign","no-unsafe-negation"]