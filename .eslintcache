[{"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js":"1","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js":"2","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js":"3","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js":"4","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js":"5","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js":"6","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js":"7","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js":"8","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js":"9","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js":"10","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js":"11","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js":"12","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js":"13","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js":"14","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js":"15","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js":"16","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js":"17","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js":"18","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js":"19","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js":"20","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js":"21","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js":"22","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js":"23","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js":"24","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js":"25","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js":"26","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyReducer.js":"27","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js":"28","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-reducer.js":"29","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js":"30","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js":"31","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js":"32","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js":"33"},{"size":382,"mtime":1608593124073,"results":"34","hashOfConfig":"35"},{"size":571,"mtime":1608686223216,"results":"36","hashOfConfig":"35"},{"size":448,"mtime":1608284288025,"results":"37","hashOfConfig":"35"},{"size":416,"mtime":1608815089526,"results":"38","hashOfConfig":"35"},{"size":3882,"mtime":1608850980879,"results":"39","hashOfConfig":"35"},{"size":8156,"mtime":1608273763165,"results":"40","hashOfConfig":"35"},{"size":347,"mtime":1608636639926,"results":"41","hashOfConfig":"35"},{"size":391,"mtime":1608284089102,"results":"42","hashOfConfig":"35"},{"size":114,"mtime":1608608595297,"results":"43","hashOfConfig":"35"},{"size":1649,"mtime":1608860924711,"results":"44","hashOfConfig":"35"},{"size":405,"mtime":1608852029507,"results":"45","hashOfConfig":"35"},{"size":262,"mtime":1608337092450,"results":"46","hashOfConfig":"35"},{"size":3044,"mtime":1608867876936,"results":"47","hashOfConfig":"35"},{"size":1603,"mtime":1608691023491,"results":"48","hashOfConfig":"35"},{"size":1160,"mtime":1608609940359,"results":"49","hashOfConfig":"35"},{"size":422,"mtime":1608636383126,"results":"50","hashOfConfig":"35"},{"size":257,"mtime":1608420859798,"results":"51","hashOfConfig":"35"},{"size":532,"mtime":1608690938433,"results":"52","hashOfConfig":"35"},{"size":245,"mtime":1608635735341,"results":"53","hashOfConfig":"35"},{"size":794,"mtime":1608690923809,"results":"54","hashOfConfig":"35"},{"size":232,"mtime":1608442202017,"results":"55","hashOfConfig":"35"},{"size":322,"mtime":1608592661900,"results":"56","hashOfConfig":"35"},{"size":522,"mtime":1608679373441,"results":"57","hashOfConfig":"35"},{"size":284,"mtime":1608636198762,"results":"58","hashOfConfig":"35"},{"size":0,"mtime":1608636264966,"results":"59","hashOfConfig":"35"},{"size":409,"mtime":1608636266901,"results":"60","hashOfConfig":"35"},{"size":425,"mtime":1608636583053,"results":"61","hashOfConfig":"35"},{"size":1793,"mtime":1608852070456,"results":"62","hashOfConfig":"35"},{"size":376,"mtime":1608814432335,"results":"63","hashOfConfig":"35"},{"size":178,"mtime":1608851859442,"results":"64","hashOfConfig":"35"},{"size":302,"mtime":1608883499567,"results":"65","hashOfConfig":"35"},{"size":1801,"mtime":1608969297633,"results":"66","hashOfConfig":"35"},{"size":994,"mtime":1608876184122,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"7n2hzo",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"70"},"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/index.js",[],["146","147"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/store.js",["148"],"import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\nimport createSocketMiddleware from './utils/socket-middleware';\n\nconst middleware = [thunk, createSocketMiddleware()];\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Configuration If NPM Package Isn't needed.\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/App.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/rootReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/Login.js",["149","150","151"],"import React from 'react';\nimport './Login.scss';\nimport { Modal } from 'reactstrap';\n\n// Child Components:\nimport NewAccount from '../NewAccount/NewAccount';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from 'react-router';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Login\n      userName: \"\",\n      password: \"\",\n\n      // Modal\n      modal: false,\n      redirect: false\n    };\n    // SetOnChange (State Managing Callback)\n    this.setOnChange = this.setOnChange.bind(this);\n    // Login Request Handler\n    this.handleLogin = this.handleLogin.bind(this);\n    // Modal Trigger\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  /*\n  Future Refactors: handleLogin(event) should be done through TCP socket conenction\n  as opposed to a HTTP Post handler to reduce incoming server traffic.\n  */\n  handleLogin(event) {\n    // 1. Verify the account username exists (/w the corresponding password).\n    event.preventDefault();\n    fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.state.userName,\n        password: this.state.password\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(this);\n        console.log(data);\n        // If Unsuccesfful:\n        // Trigger Alert/Feedback\n        if ('code' in data) {\n          // Control FeedBack.\n        }\n        // If Succesful:\n        // Save account details to redux state.\n        // Redirect to Messaging Page.\n        else {\n          // Should be a single account stored onto Redux Store.\n          this.props.storeAccountDetails(data['account'][0]);\n          console.log(data['accessToken']);\n          // Redirect Page To Other Main Page Component.\n          this.setState({ redirect: true })\n        }\n      })\n  }\n\n  // Create Account Handlers\n  setOnChange(event) {\n    console.log(event.target.id);\n    let fieldID = event.target.id;\n    let obj = {};\n    obj[`${fieldID}`] = event.target.value;\n    this.setState(obj);\n    this.setState({\n      emailinvalid: false,\n      usrinvalid: false,\n      pwinvalid: false\n    })\n  }\n\n  // Handles Modal Triggering\n  toggleModal() {\n    console.log(!this.state.modal);\n    this.setState({ modal: !this.state.modal })\n  }\n\n  render() {\n    return (\n      <>\n        {/* Redirect Initiative */}\n        {this.state.redirect == true\n          ?\n          <Redirect to=\"/main\" />\n          :\n          null\n        }\n        <div className=\"wrapper fadeInDown\" onSubmit={this.handleLogin}>\n          <div id=\"formContent\">\n            <div className=\"wrapper-img fadeIn first\">\n              <img src=\"https://img.icons8.com/cute-clipart/256/000000/chat.png\" id=\"icon\" />\n            </div>\n\n            <form>\n              <input type=\"text\" id=\"userName\" className=\"fadeIn second\" name=\"userName\" placeholder=\"Username\" onChange={this.setOnChange} />\n              <input type=\"password\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"Password\" onChange={this.setOnChange} />\n              <input type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\" />\n            </form>\n\n            <div id=\"formFooter\">\n              <a className=\"underlineHover\" href=\"#\">Forgot Password?</a>\n            </div>\n            <div id=\"formFooter\">\n              <button className=\"createAccount fadeIn fifth\" onClick={this.toggleModal}>Create Account</button>\n              {/* newAccount Modal */}\n              <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n                <NewAccount />\n              </Modal>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Login;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/NewAccount/NewAccount.js",["152","153","154"],"import React from 'react';\nimport { ModalHeader, ModalBody, ModalFooter, Label, Input, Form, FormGroup, FormFeedback } from 'reactstrap';\n\nclass NewAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // New Account\n      nafname: \"\",\n      nalname: \"\",\n      nausername: \"\",\n      naemailaddr: \"\",\n      napassword1: \"\",\n      napassword2: \"\",\n      nadobday: 1,\n      nadobmonth: 1,\n      nadobyear: (new Date()).getFullYear(),\n      nagender: \"N\",\n      usrinvalid: false,\n      emailinvalid: false,\n      pwinvalid: false,\n    }\n    // SetOnChange (State Managing Callback)\n    this.setOnChange = this.setOnChange.bind(this);\n    // Create Account Request Handler\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    // Modal Trigger\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  // Create Account Handlers\n  setOnChange(event) {\n    let fieldID = event.target.id;\n    let obj = {};\n    obj[`${fieldID}`] = event.target.value;\n    this.setState(obj);\n    this.setState({\n      emailinvalid: false,\n      usrinvalid: false,\n      pwinvalid: false\n    })\n  }\n\n  // Feedbback Togglers\n  invalidateEmailFeedback() {\n    console.log(!this.state.emailinvalid);\n    this.setState({ emailinvalid: true })\n  }\n  invalidateUserFeedback() {\n    console.log(!this.state.usrinvalid);\n    this.setState({ usrinvalid: true })\n  }\n  invalidatePasswordFeedback() {\n    console.log(!this.state.pwinvalid);\n    this.setState({ pwinvalid: true })\n  }\n\n  handleNewAccount(event) {\n    // Check #1: Check if passwords match:\n    // Check #2 Check if username is being used already:\n    // Check #3 Check if email is being used already:\n    fetch(`${window.location.protocol}//${window.location.host}/api/authenticate/newaccount`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        nafname: this.state.nafname,\n        nalname: this.state.nalname,\n        nausername: this.state.nausername,\n        naemailaddr: this.state.naemailaddr,\n        napassword1: this.state.napassword1,\n        napassword2: this.state.napassword2,\n        nadobday: this.state.nadobday,\n        nadobmonth: this.state.nadobmonth,\n        nadobyear: this.state.nadobyear,\n        nagender: this.state.nagender\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        // If 'data' is an array, then it has errors\n        if (Array.isArray(data)) {\n          // Handles error messages\n          data.map((item, idx) => {\n            if ('code' in item) {\n              switch (item.code) {\n                case \"EMAIL_REGISTERED\":\n                  this.invalidateEmailFeedback();\n                  break;\n                case \"USERNAME_REGISTERED\":\n                  this.invalidateUserFeedback();\n                  break;\n                case \"PASSWORD_MISMATCH\":\n                  this.invalidatePasswordFeedback();\n                  break;\n              }\n            }\n          })\n          // If 'data' is an object, then it has no errors\n        } else {\n          // Close Modal (Probably Trigger an alert or something asw to tell the user they signed up!)\n          this.toggleModal();\n        }\n      })\n  }\n  \n  // Handles Modal Triggering\n  toggleModal() {\n    console.log(!this.state.modal);\n    this.setState({ modal: !this.state.modal })\n  }\n\n\n  render() {\n    let days = [];\n    let months = [];\n    let years = [];\n    for (let i = 1; i <= 31; i++) { days.push(i); }\n    for (let i = 1; i <= 12; i++) { months.push(i); }\n    for (let i = 1900; i <= (new Date()).getFullYear(); i++) { years.push(i); }\n    return (\n      <>\n        <ModalHeader toggle={this.toggleModal}><h3>Sign Up</h3></ModalHeader>\n        <ModalBody>\n\n          <Form className=\"createAccount-form container\">\n            <FormGroup className=\"createAccount-form-name\">\n              {/* Name Fields */}\n              <Input type=\"text\" id=\"nafname\" name=\"nafname\" placeholder=\"First Name\" onChange={this.setOnChange} />\n              <Input type=\"text\" id=\"nalname\" name=\"nalname\" placeholder=\"Last Name\" onChange={this.setOnChange} />\n            </FormGroup>\n            {/* Email Field */}\n            <FormGroup className=\"createAccount-form-email\">\n              {\n                this.state.emailinvalid\n                  ?\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} invalid />\n                  :\n                  <Input type=\"text\" id=\"naemailaddr\" name=\"naemailaddr\" placeholder=\"Email Address\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Emails is taken</FormFeedback>\n            </FormGroup>\n            {/* Username Field */}\n            <FormGroup className=\"createAccount-form-username\">\n              {\n                this.state.usrinvalid ?\n                  <Input invalid type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n                  :\n                  <Input type=\"text\" id=\"nausername\" name=\"nausername\" placeholder=\"User Name\" onChange={this.setOnChange} />\n              }\n              <FormFeedback invalid>Username is taken</FormFeedback>\n            </FormGroup>\n            {/* Password Fields */}\n            <FormGroup className=\"createAccount-form-password\">\n              {this.state.pwinvalid ?\n                <>\n                  <Input invalid type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input invalid type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n                :\n                <>\n                  <Input type=\"password\" id=\"napassword1\" name=\"napassword1\" placeholder=\"Password\" onChange={this.setOnChange} />\n                  <Input type=\"password\" id=\"napassword2\" name=\"napassword2\" placeholder=\"Confirm\" onChange={this.setOnChange} />\n                </>\n              }\n              <FormFeedback invalid>You will not be able to see this</FormFeedback>\n            </FormGroup>\n            <FormGroup className=\"createAccount-form-dob\">\n              <div className=\"createAccount-form-dob-label\">\n                <h6>Date Of Birth:</h6>\n              </div>\n              {/* Date Of Birth Selectors: */}\n              <select onChange={this.setOnChange} name=\"nadobday\" id=\"nadobday\" className=\"dob-day\" value={this.state.nadobday}>\n                {days.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobmonth\" id=\"nadobmonth\" className=\"dob-month\" value={this.state.nadobmonth}>\n                {months.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n              <select onChange={this.setOnChange} name=\"nadobyear\" id=\"nadobyear\" className=\"dob-year\" value={this.state.nadobyear}>\n                {years.map((val, idx) => (\n                  <option value={val}>{val}</option>\n                ))\n                }\n              </select>\n            </FormGroup>\n            {/* Gender Selector: */}\n            <FormGroup>\n              <div className=\"createAccount-form-gender-label\">\n                <h6>Gender:</h6>\n              </div>\n              <select onChange={this.setOnChange} name=\"nagender\" id=\"nagender\" className=\"createAccount-form-gender\">\n                <option value=\"N\">---Choose A Gender Option---</option>\n                <option value=\"M\">Male</option>\n                <option value=\"F\">Female</option>\n              </select>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"signUp\" onClick={this.handleNewAccount}>Create Account</button>\n          {/* Adds Space: {' '} */}\n        </ModalFooter>\n      </>\n    )\n  }\n}\n\nexport default NewAccount;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Login/LoginActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/Main.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNavContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/MainNav/MainNav.js",["155"],"import React from 'react';\n\n// Sass:\nimport './MainNav.scss';\n\n// ReactStrap Dependencies:\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n} from 'reactstrap';\n\n// Containers:\nimport FriendSearch from '../FriendSearch/FriendSearchContainer';\n\n\nclass MainNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      optionsIsOpen: false,\n      notificationsIsOpen: false,\n      newFriendModalState: false\n    }\n    this.toggleOptions = this.toggleOptions.bind(this);\n    this.toggleNotifications = this.toggleNotifications.bind(this);\n    this.toggleNewFriend = this.toggleNewFriend.bind(this);\n  }\n\n  toggleOptions() {\n    this.setState({ optionsIsOpen: !this.state.optionsIsOpen });\n  }\n\n  toggleNotifications() {\n    this.setState({ notificationsIsOpen: !this.state.notificationsIsOpen });\n  }\n\n  toggleNewFriend() {\n    this.setState({ newFriendModalState: !this.state.newFriendModalState });\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          <Navbar className=\"mainnav\" color=\"light\" light expand=\"md\">\n            <NavbarBrand href=\"/\"><img src=\"https://img.icons8.com/cute-clipart/64/000000/chat.png\" id=\"icon\" /></NavbarBrand>\n            <Nav className=\"mr-auto\"></Nav>\n            {/* Add New User Feature */}\n            <NavLink onClick={this.toggleNewFriend} href=\"#\"><i id=\"new-user\" className=\"fas fa-plus-square\"></i></NavLink>\n            <Modal isOpen={this.state.newFriendModalState} toggle={this.toggleNewFriend} className=\"\">\n              <ModalHeader toggle={this.toggleNewFriend}>Add Friend</ModalHeader>\n\n              <FriendSearch />\n\n            </Modal>\n            {/* Notifications Feature */}\n            <UncontrolledDropdown>\n              <DropdownToggle nav>\n                <i id=\"notifications\" className=\"fas fa-bell\"></i>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem id=\"notifications-fr\">\n                  <span><i className=\"fas fa-user\"></i>{\" \"}Profile</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            {/* Caret Dropwon Feature */}\n            <UncontrolledDropdown>\n              <DropdownToggle nav>\n                <i className=\"fas fa-caret-down\"></i>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <span><i className=\"fas fa-user\"></i>{\" \"}Profile</span>\n                </DropdownItem>\n                <DropdownItem>\n                  <span><i className=\"fas fa-cog\"></i>{\" \"}Settings</span>\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>\n                  <span><i className=\"fas fa-power-off\"></i>{\" \"}Logout</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Navbar>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default MainNav;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBar.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItem.js",["156"],"import React, { useState } from 'react';\n\nimport './ChatItem.scss';\n\n\nclass ChatItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatName: props.userId,\n      chatMsg: props.userMsg,\n      isSelected: props.isSelected\n    }\n  }\n  // Initial State: Most Recent Message On The Database Via an HTTP request.\n  // Consequent Rerenders: New Dynamic Messages sent to this specific chat \n  // (Requires socket endpoints to emit the corresponding data from the client)\n  // const [chatName, setChatName] = useState(props.userId);\n  // const [chatMsg, setChatMsg] = useState(props.userMsg);\n  // const [isSelected, setSelectedState] = useState(props.isSelected);\n  // console.log(props);\n  render() {\n    return (\n    this.state.isSelected\n        ?\n        // Selected Render\n        <div className=\"chatitem selected\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n        :\n        // Not Selected Render\n        <div className=\"chatitem\">\n          <h6>{this.state.chatName}</h6>\n          <p>{this.state.chatMsg}</p>\n        </div>\n    )\n  }\n}\nexport default ChatItem;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeaderContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatHeader/ChatHeader.js",["157","158","159"],"import React, {useState} from 'react';\n\nimport './ChatHeader.scss';\n\nfunction ChatHeader({chatName, chatType}) {\n\n  return (\n    <>\n      <div className=\"chat-header\">\n          <h5>{chatName}</h5>\n          {\n          chatType == 'F' \n          ?\n          <button>Friends <i className=\"fas fa-check\"></i></button>\n          :\n          (chatType == 'G' \n          ?\n          <button>In Group <i className=\"fas fa-check\"></i></button>\n          :\n          null)\n          }\n      </div>\n    </>\n  )\n}\n\nexport default ChatHeader;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBody.js",["160"],"import React from 'react';\n\nimport './ChatBody.scss';\n\n// Containers:\nimport Message from '../Message/MessageContainer';\n\nclass ChatBody extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"chatbody\">\n      <div className=\"chatbody-messages\">\n        <Message msgString=\"Yes\" isSender={false} />\n        <Message msgString=\"Yes\" isSender={true} />\n      </div>\n      <div className=\"chatbody-form\">\n        <hr />\n        <div className=\"chatbody-form-textbox\">\n          <input type=\"text\" placeholder=\"Say something...\" />\n          <button>\n          <i className=\"fas fa-caret-right fa-3x\"></i>\n          </button>\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default ChatBody;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/MessageContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Message/Message.js",["161"],"import React, {useState} from 'react';\n\nimport './Message.scss';\n\nfunction Message({msgString, isSender}) {\n\n  return(\n    isSender\n    ?\n    <div className=\"message sender\">\n      <p>{msgString}</p>\n    </div>\n    :\n    <div className=\"message reciever\">\n      <p>{msgString}</p>\n    </div>\n  )\n}\n\nexport default Message;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemContainer.js",[],["162","163"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatItem/ChatItemActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/SideBar/SideBarActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/ChatBody/ChatBodyReducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-middleware.js",["164"],"import io from 'socket.io-client';\n\n// Invoke this function to return the corresponding socket-middleware.\nconst createSocketMiddleware = () => {\n    let socket;\n    // Socket Middleware\n    // storeAPI has 'getState' and 'dispatch' as it's fields here.\n    // (Could also use ({dispatch, getState}) in place of 'storeAPI' here)\n    return storeAPI => next => action => {\n        switch (action.type) {\n            // Must dispatch 'LOGIN' action to instantiate socket endpoint.\n            case \"LOGIN\": {\n                socket = io();\n\n                console.log(storeAPI.getState());\n\n                socket.on(\"message\", (message) => {\n                    // May need a Socket Reducer.\n                    storeAPI.dispatch({\n                        // May need to check whether it is a new:\n                        // 1. Message\n                        // 2. Group\n                        // 3. Friend\n                        // (So I'm suspecting an extra field may be required)\n                        type: \"SOCKET_MESSAGE_RECEIVED\",\n                        payload: message\n                    });\n                });\n                break;\n            }\n            // This endpoint can only be reached once LOGIN action is dispatched\n            // to initialise the socket endpoint on the redux client.\n            case \"SEND_WEBSOCKET_MESSAGE\": {\n                console.log('SEND_WEBSOCKET_MESSAGE', action)\n                socket.emit(action.eventName, action.payload, (data) => {\n                    // arg: data - The data returned by the corresponding scoket endpoint\n                    console.log('Server Returned:', data);\n                });\n                return;\n            }\n        }\n\n        return next(action);\n    }\n}\n\n\nexport default createSocketMiddleware;","/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/utils/socket-reducer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/Main/MainActions.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearchContainer.js",[],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendSearch/FriendSearch.js",["165"],"/Users/vip/Desktop/github projects/mern-stack-project/mern-chat-app/src/App/FriendItem/FriendItem.js",["166","167","168"],"import './FriendItem.scss';\n\nfunction FriendItem({ userName, fname, lname, friendStatus }) {\n  return (\n    <>\n      <div className=\"frienditem\">\n        <div className=\"frienditem-header\">\n          <h6>{userName}</h6>\n          <p>{fname}{\" \"}{lname}</p>\n        </div>\n        <div className=\"frienditem-icon\">\n          {\n            <>\n              {friendStatus == 'UNSENT'\n                ?\n                <i className=\"fas fa-user-plus\"></i>\n                :\n                (\n                  friendStatus == 'PENDING'\n                    ?\n                    <i className=\"fas fa-check\"></i>\n                    :\n                    (\n                      friendStatus == 'ACCEPTED'\n                        ?\n                        <i class=\"fas fa-user-minus\"></i>\n                        :\n                        null\n                    )\n                )\n              }\n\n\n            </>\n          }\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default FriendItem;",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":1,"column":40,"nodeType":"175","messageId":"176","endLine":1,"endColumn":47},{"ruleId":"177","severity":1,"message":"178","line":95,"column":30,"nodeType":"179","messageId":"180","endLine":95,"endColumn":32},{"ruleId":"181","severity":1,"message":"182","line":104,"column":15,"nodeType":"183","endLine":104,"endColumn":94},{"ruleId":"184","severity":1,"message":"185","line":114,"column":15,"nodeType":"183","endLine":114,"endColumn":54},{"ruleId":"173","severity":1,"message":"186","line":2,"column":47,"nodeType":"175","messageId":"176","endLine":2,"endColumn":52},{"ruleId":"187","severity":1,"message":"188","line":87,"column":32,"nodeType":"189","messageId":"190","endLine":87,"endColumn":34},{"ruleId":"191","severity":1,"message":"192","line":89,"column":15,"nodeType":"193","messageId":"194","endLine":99,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":54,"column":35,"nodeType":"183","endLine":54,"endColumn":113},{"ruleId":"173","severity":1,"message":"195","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"173","severity":1,"message":"195","line":1,"column":16,"nodeType":"175","messageId":"176","endLine":1,"endColumn":24},{"ruleId":"177","severity":1,"message":"178","line":12,"column":20,"nodeType":"179","messageId":"180","endLine":12,"endColumn":22},{"ruleId":"177","severity":1,"message":"178","line":16,"column":21,"nodeType":"179","messageId":"180","endLine":16,"endColumn":23},{"ruleId":"196","severity":1,"message":"197","line":9,"column":3,"nodeType":"198","messageId":"199","endLine":11,"endColumn":4},{"ruleId":"173","severity":1,"message":"195","line":1,"column":16,"nodeType":"175","messageId":"176","endLine":1,"endColumn":24},{"ruleId":"169","replacedBy":"200"},{"ruleId":"171","replacedBy":"201"},{"ruleId":"191","severity":1,"message":"192","line":10,"column":9,"nodeType":"193","messageId":"194","endLine":41,"endColumn":10},{"ruleId":"173","severity":1,"message":"202","line":6,"column":3,"nodeType":"175","messageId":"176","endLine":6,"endColumn":9},{"ruleId":"177","severity":1,"message":"178","line":14,"column":29,"nodeType":"179","messageId":"180","endLine":14,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":19,"column":32,"nodeType":"179","messageId":"180","endLine":19,"endColumn":34},{"ruleId":"177","severity":1,"message":"178","line":24,"column":36,"nodeType":"179","messageId":"180","endLine":24,"endColumn":38},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Label' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["203"],["204"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]